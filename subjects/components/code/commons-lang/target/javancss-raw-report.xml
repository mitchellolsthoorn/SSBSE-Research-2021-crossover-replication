<?xml version="1.0"?>
<javancss>
  <date>2021-04-27</date>
  <time>16:29:06</time>
  <packages>
    <package>
      <name>org.apache.commons.lang3</name>
      <classes>26</classes>
      <functions>358</functions>
      <ncss>2554</ncss>
      <javadocs>385</javadocs>
      <javadoc_lines>5033</javadoc_lines>
      <single_comment_lines>145</single_comment_lines>
      <multi_comment_lines>2357</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.arch</name>
      <classes>1</classes>
      <functions>8</functions>
      <ncss>28</ncss>
      <javadocs>9</javadocs>
      <javadoc_lines>52</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>88</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.builder</name>
      <classes>14</classes>
      <functions>354</functions>
      <ncss>2191</ncss>
      <javadocs>372</javadocs>
      <javadoc_lines>4040</javadoc_lines>
      <single_comment_lines>195</single_comment_lines>
      <multi_comment_lines>504</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.compare</name>
      <classes>1</classes>
      <functions>1</functions>
      <ncss>23</ncss>
      <javadocs>1</javadocs>
      <javadoc_lines>7</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>45</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.concurrent</name>
      <classes>18</classes>
      <functions>109</functions>
      <ncss>566</ncss>
      <javadocs>168</javadocs>
      <javadoc_lines>1798</javadoc_lines>
      <single_comment_lines>21</single_comment_lines>
      <multi_comment_lines>793</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.concurrent.locks</name>
      <classes>0</classes>
      <functions>0</functions>
      <ncss>1</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>23</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.event</name>
      <classes>2</classes>
      <functions>17</functions>
      <ncss>110</ncss>
      <javadocs>24</javadocs>
      <javadoc_lines>218</javadoc_lines>
      <single_comment_lines>8</single_comment_lines>
      <multi_comment_lines>66</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.exception</name>
      <classes>5</classes>
      <functions>72</functions>
      <ncss>321</ncss>
      <javadocs>77</javadocs>
      <javadoc_lines>928</javadoc_lines>
      <single_comment_lines>23</single_comment_lines>
      <multi_comment_lines>118</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.function</name>
      <classes>12</classes>
      <functions>12</functions>
      <ncss>47</ncss>
      <javadocs>24</javadocs>
      <javadoc_lines>156</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>220</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.math</name>
      <classes>3</classes>
      <functions>113</functions>
      <ncss>906</ncss>
      <javadocs>115</javadocs>
      <javadoc_lines>1230</javadoc_lines>
      <single_comment_lines>209</single_comment_lines>
      <multi_comment_lines>205</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.mutable</name>
      <classes>9</classes>
      <functions>211</functions>
      <ncss>544</ncss>
      <javadocs>220</javadocs>
      <javadoc_lines>1403</javadoc_lines>
      <single_comment_lines>66</single_comment_lines>
      <multi_comment_lines>207</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.reflect</name>
      <classes>6</classes>
      <functions>64</functions>
      <ncss>406</ncss>
      <javadocs>64</javadocs>
      <javadoc_lines>829</javadoc_lines>
      <single_comment_lines>57</single_comment_lines>
      <multi_comment_lines>148</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.stream</name>
      <classes>0</classes>
      <functions>0</functions>
      <ncss>1</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>25</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.text</name>
      <classes>10</classes>
      <functions>339</functions>
      <ncss>2188</ncss>
      <javadocs>392</javadocs>
      <javadoc_lines>3708</javadoc_lines>
      <single_comment_lines>177</single_comment_lines>
      <multi_comment_lines>265</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.text.translate</name>
      <classes>12</classes>
      <functions>51</functions>
      <ncss>331</ncss>
      <javadocs>63</javadocs>
      <javadoc_lines>435</javadoc_lines>
      <single_comment_lines>312</single_comment_lines>
      <multi_comment_lines>228</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.time</name>
      <classes>15</classes>
      <functions>269</functions>
      <ncss>2327</ncss>
      <javadocs>359</javadocs>
      <javadoc_lines>3224</javadoc_lines>
      <single_comment_lines>260</single_comment_lines>
      <multi_comment_lines>647</multi_comment_lines>
    </package>
    <package>
      <name>org.apache.commons.lang3.tuple</name>
      <classes>6</classes>
      <functions>59</functions>
      <ncss>207</ncss>
      <javadocs>65</javadocs>
      <javadoc_lines>518</javadoc_lines>
      <single_comment_lines>10</single_comment_lines>
      <multi_comment_lines>182</multi_comment_lines>
    </package>
    <total>
      <classes>140</classes>
      <functions>2037</functions>
      <ncss>12751</ncss>
      <javadocs>2338</javadocs>
      <javadoc_lines>23579</javadoc_lines>
      <single_comment_lines>1484</single_comment_lines>
      <multi_comment_lines>6121</multi_comment_lines>
    </total>
    <table>
      <tr><td>Packages</td><td>Classes</td><td>Functions</td><td>NCSS</td><td>Javadocs</td><td>per</td></tr>
      <tr><td>17.00</td><td>140.00</td><td>2,037.00</td><td>12,751.00</td><td>2,338.00</td><td>Project</td></tr>
      <tr><td></td><td>8.24</td><td>119.82</td><td>750.06</td><td>137.53</td><td>Package</td></tr>
      <tr><td></td><td></td><td>14.55</td><td>91.08</td><td>16.70</td><td>Class</td></tr>
      <tr><td></td><td></td><td></td><td>6.26</td><td>1.15</td><td>Function</td></tr>
    </table>
  </packages>

  <objects>
    <object>
      <name>org.apache.commons.lang3.LocaleUtils</name>
      <ncss>108</ncss>
      <functions>14</functions>
      <classes>1</classes>
      <javadocs>15</javadocs>
      <javadocs_lines>149</javadocs_lines>
      <single_comment_lines>4</single_comment_lines>
      <implementation_comment_lines>4</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.SerializationUtils</name>
      <ncss>59</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>137</javadocs_lines>
      <single_comment_lines>4</single_comment_lines>
      <implementation_comment_lines>14</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.Conversion</name>
      <ncss>593</ncss>
      <functions>42</functions>
      <classes>0</classes>
      <javadocs>43</javadocs>
      <javadocs_lines>712</javadocs_lines>
      <single_comment_lines>18</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.SystemUtils</name>
      <ncss>169</ncss>
      <functions>20</functions>
      <classes>0</classes>
      <javadocs>21</javadocs>
      <javadocs_lines>223</javadocs_lines>
      <single_comment_lines>29</single_comment_lines>
      <implementation_comment_lines>1332</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.MutableByte</name>
      <ncss>78</ncss>
      <functions>31</functions>
      <classes>0</classes>
      <javadocs>32</javadocs>
      <javadocs_lines>198</javadocs_lines>
      <single_comment_lines>9</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.MutableBoolean</name>
      <ncss>36</ncss>
      <functions>16</functions>
      <classes>0</classes>
      <javadocs>17</javadocs>
      <javadocs_lines>97</javadocs_lines>
      <single_comment_lines>7</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.MutableLong</name>
      <ncss>76</ncss>
      <functions>30</functions>
      <classes>0</classes>
      <javadocs>31</javadocs>
      <javadocs_lines>193</javadocs_lines>
      <single_comment_lines>9</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.Mutable</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>27</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.MutableDouble</name>
      <ncss>79</ncss>
      <functions>32</functions>
      <classes>0</classes>
      <javadocs>33</javadocs>
      <javadocs_lines>224</javadocs_lines>
      <single_comment_lines>10</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.MutableInt</name>
      <ncss>76</ncss>
      <functions>30</functions>
      <classes>0</classes>
      <javadocs>31</javadocs>
      <javadocs_lines>193</javadocs_lines>
      <single_comment_lines>9</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.MutableObject</name>
      <ncss>23</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>47</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.MutableFloat</name>
      <ncss>78</ncss>
      <functions>32</functions>
      <classes>0</classes>
      <javadocs>33</javadocs>
      <javadocs_lines>226</javadocs_lines>
      <single_comment_lines>10</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.mutable.MutableShort</name>
      <ncss>78</ncss>
      <functions>31</functions>
      <classes>0</classes>
      <javadocs>32</javadocs>
      <javadocs_lines>198</javadocs_lines>
      <single_comment_lines>9</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.StringEscapeUtils</name>
      <ncss>82</ncss>
      <functions>17</functions>
      <classes>2</classes>
      <javadocs>18</javadocs>
      <javadocs_lines>318</javadocs_lines>
      <single_comment_lines>15</single_comment_lines>
      <implementation_comment_lines>148</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.tuple.Pair</name>
      <ncss>38</ncss>
      <functions>12</functions>
      <classes>1</classes>
      <javadocs>13</javadocs>
      <javadocs_lines>114</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>9</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.tuple.MutableTriple</name>
      <ncss>27</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>72</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>9</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.tuple.MutablePair</name>
      <ncss>35</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>76</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>9</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.tuple.ImmutableTriple</name>
      <ncss>23</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>65</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>15</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.tuple.ImmutablePair</name>
      <ncss>35</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>101</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>14</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.tuple.Triple</name>
      <ncss>33</ncss>
      <functions>10</functions>
      <classes>1</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>90</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>9</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.Charsets</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>32</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.CharSet</name>
      <ncss>68</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>110</javadocs_lines>
      <single_comment_lines>13</single_comment_lines>
      <implementation_comment_lines>38</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.BitField</name>
      <ncss>40</ncss>
      <functions>18</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
      <javadocs_lines>225</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.CharRange</name>
      <ncss>106</ncss>
      <functions>14</functions>
      <classes>1</classes>
      <javadocs>21</javadocs>
      <javadocs_lines>149</javadocs_lines>
      <single_comment_lines>9</single_comment_lines>
      <implementation_comment_lines>10</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.reflect.InheritanceUtils</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>22</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.reflect.Typed</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.reflect.MemberUtils</name>
      <ncss>112</ncss>
      <functions>12</functions>
      <classes>1</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>89</javadocs_lines>
      <single_comment_lines>14</single_comment_lines>
      <implementation_comment_lines>9</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.reflect.TypeLiteral</name>
      <ncss>20</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>54</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils</name>
      <ncss>59</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
      <javadocs_lines>142</javadocs_lines>
      <single_comment_lines>8</single_comment_lines>
      <implementation_comment_lines>18</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.reflect.FieldUtils</name>
      <ncss>164</ncss>
      <functions>35</functions>
      <classes>0</classes>
      <javadocs>36</javadocs>
      <javadocs_lines>510</javadocs_lines>
      <single_comment_lines>35</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.ArraySorter</name>
      <ncss>28</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
      <javadocs_lines>72</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.NotImplementedException</name>
      <ncss>22</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
      <javadocs_lines>77</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.RandomStringUtils</name>
      <ncss>92</ncss>
      <functions>20</functions>
      <classes>0</classes>
      <javadocs>21</javadocs>
      <javadocs_lines>288</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableBooleanSupplier</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableRunnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>11</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableIntSupplier</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableDoubleSupplier</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableDoubleBinaryOperator</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>14</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableLongSupplier</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableLongBinaryOperator</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>14</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.ToBooleanBiFunction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>17</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableCallable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>13</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableIntBinaryOperator</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>14</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableShortSupplier</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.function.FailableSupplier</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>13</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.math.Fraction</name>
      <ncss>308</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>35</javadocs>
      <javadocs_lines>301</javadocs_lines>
      <single_comment_lines>67</single_comment_lines>
      <implementation_comment_lines>96</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.math.NumberUtils</name>
      <ncss>516</ncss>
      <functions>67</functions>
      <classes>0</classes>
      <javadocs>67</javadocs>
      <javadocs_lines>810</javadocs_lines>
      <single_comment_lines>138</single_comment_lines>
      <implementation_comment_lines>29</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.math.IEEE754rUtils</name>
      <ncss>69</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>13</javadocs>
      <javadocs_lines>119</javadocs_lines>
      <single_comment_lines>4</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.FastDateParser</name>
      <ncss>432</ncss>
      <functions>23</functions>
      <classes>14</classes>
      <javadocs>44</javadocs>
      <javadocs_lines>261</javadocs_lines>
      <single_comment_lines>38</single_comment_lines>
      <implementation_comment_lines>26</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.FastDateFormat</name>
      <ncss>97</ncss>
      <functions>41</functions>
      <classes>1</classes>
      <javadocs>38</javadocs>
      <javadocs_lines>383</javadocs_lines>
      <single_comment_lines>17</single_comment_lines>
      <implementation_comment_lines>30</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.StopWatch</name>
      <ncss>138</ncss>
      <functions>26</functions>
      <classes>2</classes>
      <javadocs>27</javadocs>
      <javadocs_lines>329</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>34</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.FormatCache</name>
      <ncss>72</ncss>
      <functions>8</functions>
      <classes>1</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>101</javadocs_lines>
      <single_comment_lines>10</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.GmtTimeZone</name>
      <ncss>37</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.TimeZones</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.DateParser</name>
      <ncss>9</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
      <javadocs_lines>82</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.CalendarUtils</name>
      <ncss>11</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>25</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.DurationUtils</name>
      <ncss>34</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>66</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.DateUtils</name>
      <ncss>415</ncss>
      <functions>61</functions>
      <classes>2</classes>
      <javadocs>65</javadocs>
      <javadocs_lines>1041</javadocs_lines>
      <single_comment_lines>79</single_comment_lines>
      <implementation_comment_lines>51</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.FastDatePrinter</name>
      <ncss>577</ncss>
      <functions>31</functions>
      <classes>19</classes>
      <javadocs>94</javadocs>
      <javadocs_lines>450</javadocs_lines>
      <single_comment_lines>73</single_comment_lines>
      <implementation_comment_lines>75</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.DatePrinter</name>
      <ncss>14</ncss>
      <functions>13</functions>
      <classes>0</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>88</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>32</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.FastTimeZone</name>
      <ncss>26</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>25</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.DurationFormatUtils</name>
      <ncss>286</ncss>
      <functions>12</functions>
      <classes>1</classes>
      <javadocs>23</javadocs>
      <javadocs_lines>212</javadocs_lines>
      <single_comment_lines>30</single_comment_lines>
      <implementation_comment_lines>8</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.time.DateFormatUtils</name>
      <ncss>51</ncss>
      <functions>17</functions>
      <classes>0</classes>
      <javadocs>18</javadocs>
      <javadocs_lines>151</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>112</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.ClassLoaderUtils</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>18</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.CharSequenceUtils</name>
      <ncss>140</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
      <javadocs_lines>126</javadocs_lines>
      <single_comment_lines>19</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.CharEncoding</name>
      <ncss>13</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>28</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>32</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.CharUtils</name>
      <ncss>77</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>25</javadocs>
      <javadocs_lines>359</javadocs_lines>
      <single_comment_lines>7</single_comment_lines>
      <implementation_comment_lines>19</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.SerializationException</name>
      <ncss>9</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>33</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.JavaVersion</name>
      <ncss>77</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>6</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>141</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.arch.Processor</name>
      <ncss>26</ncss>
      <functions>8</functions>
      <classes>2</classes>
      <javadocs>9</javadocs>
      <javadocs_lines>52</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>52</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.CircuitBreaker</name>
      <ncss>7</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>63</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.AtomicInitializer</name>
      <ncss>10</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>65</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.ConstantInitializer</name>
      <ncss>20</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>64</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>2</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.Computable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>19</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.ConcurrentException</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>33</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils</name>
      <ncss>66</ncss>
      <functions>13</functions>
      <classes>1</classes>
      <javadocs>21</javadocs>
      <javadocs_lines>223</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.ConcurrentRuntimeException</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>35</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker</name>
      <ncss>21</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>56</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>9</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer</name>
      <ncss>57</ncss>
      <functions>13</functions>
      <classes>1</classes>
      <javadocs>16</javadocs>
      <javadocs_lines>194</javadocs_lines>
      <single_comment_lines>8</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory</name>
      <ncss>77</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>18</javadocs>
      <javadocs_lines>203</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>6</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.ConcurrentInitializer</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>32</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker</name>
      <ncss>33</ncss>
      <functions>11</functions>
      <classes>1</classes>
      <javadocs>12</javadocs>
      <javadocs_lines>51</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>26</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.LazyInitializer</name>
      <ncss>12</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>79</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.CircuitBreakingException</name>
      <ncss>9</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>26</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer</name>
      <ncss>61</ncss>
      <functions>5</functions>
      <classes>1</classes>
      <javadocs>15</javadocs>
      <javadocs_lines>191</javadocs_lines>
      <single_comment_lines>4</single_comment_lines>
      <implementation_comment_lines>4</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker</name>
      <ncss>98</ncss>
      <functions>19</functions>
      <classes>4</classes>
      <javadocs>35</javadocs>
      <javadocs_lines>334</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>8</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.CallableBackgroundInitializer</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>78</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.concurrent.AtomicSafeInitializer</name>
      <ncss>10</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>52</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>2</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.RandomUtils</name>
      <ncss>49</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>13</javadocs>
      <javadocs_lines>135</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>4</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.RegExUtils</name>
      <ncss>31</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>380</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.Range</name>
      <ncss>125</ncss>
      <functions>25</functions>
      <classes>1</classes>
      <javadocs>26</javadocs>
      <javadocs_lines>244</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>26</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.compare.ObjectToStringComparator</name>
      <ncss>19</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>7</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>8</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.StrSubstitutor</name>
      <ncss>313</ncss>
      <functions>55</functions>
      <classes>0</classes>
      <javadocs>56</javadocs>
      <javadocs_lines>657</javadocs_lines>
      <single_comment_lines>37</single_comment_lines>
      <implementation_comment_lines>13</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.NumericEntityUnescaper</name>
      <ncss>46</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>36</javadocs_lines>
      <single_comment_lines>4</single_comment_lines>
      <implementation_comment_lines>10</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.AggregateTranslator</name>
      <ncss>10</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>19</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.CharSequenceTranslator</name>
      <ncss>39</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>49</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.OctalUnescaper</name>
      <ncss>20</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>26</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.JavaUnicodeEscaper</name>
      <ncss>14</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>69</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.LookupTranslator</name>
      <ncss>33</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>20</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.UnicodeUnescaper</name>
      <ncss>17</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>13</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper</name>
      <ncss>36</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
      <javadocs_lines>59</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>11</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.EntityArrays</name>
      <ncss>37</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>12</javadocs>
      <javadocs_lines>62</javadocs_lines>
      <single_comment_lines>294</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.NumericEntityEscaper</name>
      <ncss>29</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>50</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.translate.CodePointTranslator</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>21</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.StrBuilder</name>
      <ncss>988</ncss>
      <functions>150</functions>
      <classes>3</classes>
      <javadocs>174</javadocs>
      <javadocs_lines>1439</javadocs_lines>
      <single_comment_lines>46</single_comment_lines>
      <implementation_comment_lines>18</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.CompositeFormat</name>
      <ncss>17</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>51</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>7</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.StrTokenizer</name>
      <ncss>298</ncss>
      <functions>64</functions>
      <classes>0</classes>
      <javadocs>65</javadocs>
      <javadocs_lines>522</javadocs_lines>
      <single_comment_lines>54</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.StrMatcher</name>
      <ncss>84</ncss>
      <functions>16</functions>
      <classes>5</classes>
      <javadocs>32</javadocs>
      <javadocs_lines>211</javadocs_lines>
      <single_comment_lines>7</single_comment_lines>
      <implementation_comment_lines>31</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.FormattableUtils</name>
      <ncss>22</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>77</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.FormatFactory</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>18</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat</name>
      <ncss>212</ncss>
      <functions>21</functions>
      <classes>0</classes>
      <javadocs>22</javadocs>
      <javadocs_lines>170</javadocs_lines>
      <single_comment_lines>9</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.WordUtils</name>
      <ncss>154</ncss>
      <functions>15</functions>
      <classes>0</classes>
      <javadocs>16</javadocs>
      <javadocs_lines>469</javadocs_lines>
      <single_comment_lines>17</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.text.StrLookup</name>
      <ncss>28</ncss>
      <functions>5</functions>
      <classes>2</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>94</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>7</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.AnnotationUtils</name>
      <ncss>136</ncss>
      <functions>10</functions>
      <classes>1</classes>
      <javadocs>13</javadocs>
      <javadocs_lines>112</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>4</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.BooleanUtils</name>
      <ncss>245</ncss>
      <functions>43</functions>
      <classes>0</classes>
      <javadocs>44</javadocs>
      <javadocs_lines>683</javadocs_lines>
      <single_comment_lines>8</single_comment_lines>
      <implementation_comment_lines>30</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.ClassPathUtils</name>
      <ncss>18</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>79</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.RecursiveToStringStyle</name>
      <ncss>14</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>42</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.Builder</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>66</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle</name>
      <ncss>83</ncss>
      <functions>41</functions>
      <classes>0</classes>
      <javadocs>42</javadocs>
      <javadocs_lines>285</javadocs_lines>
      <single_comment_lines>61</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.ToStringStyle</name>
      <ncss>722</ncss>
      <functions>113</functions>
      <classes>7</classes>
      <javadocs>136</javadocs>
      <javadocs_lines>1144</javadocs_lines>
      <single_comment_lines>51</single_comment_lines>
      <implementation_comment_lines>97</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.CompareToBuilder</name>
      <ncss>293</ncss>
      <functions>31</functions>
      <classes>0</classes>
      <javadocs>31</javadocs>
      <javadocs_lines>541</javadocs_lines>
      <single_comment_lines>17</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.DiffResult</name>
      <ncss>41</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
      <javadocs_lines>115</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>6</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.DiffBuilder</name>
      <ncss>270</ncss>
      <functions>23</functions>
      <classes>18</classes>
      <javadocs>23</javadocs>
      <javadocs_lines>410</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.Diffable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>31</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.ReflectionDiffBuilder</name>
      <ncss>25</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>63</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.ToStringBuilder</name>
      <ncss>193</ncss>
      <functions>63</functions>
      <classes>0</classes>
      <javadocs>64</javadocs>
      <javadocs_lines>665</javadocs_lines>
      <single_comment_lines>23</single_comment_lines>
      <implementation_comment_lines>12</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.Diff</name>
      <ncss>15</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>61</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle</name>
      <ncss>87</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>56</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.EqualsBuilder</name>
      <ncss>338</ncss>
      <functions>42</functions>
      <classes>0</classes>
      <javadocs>43</javadocs>
      <javadocs_lines>541</javadocs_lines>
      <single_comment_lines>27</single_comment_lines>
      <implementation_comment_lines>23</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.builder.IDKey</name>
      <ncss>15</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>20</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.exception.CloneFailedException</name>
      <ncss>8</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>22</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.exception.ExceptionContext</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>63</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.exception.ExceptionUtils</name>
      <ncss>199</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>35</javadocs>
      <javadocs_lines>541</javadocs_lines>
      <single_comment_lines>19</single_comment_lines>
      <implementation_comment_lines>9</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.exception.ContextedException</name>
      <ncss>39</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>15</javadocs>
      <javadocs_lines>151</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>2</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException</name>
      <ncss>39</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>15</javadocs>
      <javadocs_lines>151</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>2</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.event.EventUtils</name>
      <ncss>28</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>48</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.event.EventListenerSupport</name>
      <ncss>58</ncss>
      <functions>15</functions>
      <classes>1</classes>
      <javadocs>18</javadocs>
      <javadocs_lines>170</javadocs_lines>
      <single_comment_lines>8</single_comment_lines>
      <implementation_comment_lines>13</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.EnumUtils</name>
      <ncss>87</ncss>
      <functions>17</functions>
      <classes>0</classes>
      <javadocs>18</javadocs>
      <javadocs_lines>213</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.apache.commons.lang3.CharSetUtils</name>
      <ncss>68</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
      <javadocs_lines>125</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <averages>
      <ncss>86.48</ncss>
      <functions>14.55</functions>
      <classes>0.71</classes>
      <javadocs>16.70</javadocs>
      <javadocs_lines>168.42</javadocs_lines>
      <single_comment_lines>10.53</single_comment_lines>
      <implementation_comment_lines>20.36</implementation_comment_lines>
    </averages>
    <ncss>12,751.00</ncss>
  </objects>

  <functions>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.availableLocaleList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.availableLocaleSet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.countriesByLanguage(String)</name>
      <ncss>14</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.isAvailableLocale(Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.isISO3166CountryCode(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.isISO639LanguageCode(String)</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.isNumericAreaCode(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.languagesByCountry(String)</name>
      <ncss>14</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.localeLookupList(Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.localeLookupList(Locale,Locale)</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.parseLocale(String)</name>
      <ncss>16</ncss>
      <ccn>16</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.toLocale(Locale)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.toLocale(String)</name>
      <ncss>26</ncss>
      <ccn>22</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.LocaleUtils.LocaleUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.ClassLoaderAwareObjectInputStream(InputStream,ClassLoader)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.resolveClass(ObjectStreamClass)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.clone(T)</name>
      <ncss>11</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.deserialize(T[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.deserialize(InputStream)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.roundtrip(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.serialize(Serializable)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.serialize(Serializable,OutputStream)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationUtils.SerializationUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.hexDigitToInt(char)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)</name>
      <ncss>42</ncss>
      <ccn>40</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.hexDigitToBinary(char)</name>
      <ncss>42</ncss>
      <ccn>40</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)</name>
      <ncss>42</ncss>
      <ccn>40</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryToHexDigit(char[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryToHexDigit(char[],int)</name>
      <ncss>18</ncss>
      <ccn>28</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(char[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(char[],int)</name>
      <ncss>20</ncss>
      <ccn>27</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(char[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(char[],int)</name>
      <ncss>24</ncss>
      <ccn>39</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.intToHexDigit(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)</name>
      <ncss>36</ncss>
      <ccn>34</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.intArrayToLong(long[],int,long,int,int)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.shortArrayToLong(long[],int,long,int,int)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.shortArrayToInt(int[],int,int,int,int)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.byteArrayToLong(long[],int,long,int,int)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.byteArrayToInt(int[],int,int,int,int)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.byteArrayToShort(short[],int,short,int,int)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryToLong(long[],int,long,int,int)</name>
      <ncss>12</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryToInt(int[],int,int,int,int)</name>
      <ncss>12</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryToShort(short[],int,short,int,int)</name>
      <ncss>12</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.binaryToByte(byte[],int,byte,int,int)</name>
      <ncss>12</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.longToShortArray(long,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.intToShortArray(int,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.longToByteArray(long,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.intToByteArray(int,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.shortToByteArray(short,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.longToBinary(long,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.intToBinary(int,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.shortToBinary(short,int,int[],int,int)</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.byteToBinary(byte,int,int[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.uuidToByteArray(UUID,UUID[],int,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Conversion.byteArrayToUuid(UUID[],int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getEnvironmentVariable(String,String)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getHostName()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getJavaHome()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getJavaIoTmpDir()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getOsMatches(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getOsMatchesName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getSystemProperty(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getUserDir()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getUserHome()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getUserName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.getUserName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.isJavaAwtHeadless()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(JavaVersion)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.isJavaVersionAtMost(JavaVersion)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.isJavaVersionMatch(String,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String)</name>
      <ncss>4</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.isOSNameMatch(String,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.isOSVersionMatch(String,String)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SystemUtils.SystemUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.MutableByte()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.MutableByte(byte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.MutableByte(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.MutableByte(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.setValue(byte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.setValue(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.increment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.getAndIncrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.incrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.decrement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.getAndDecrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.decrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.add(byte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.add(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.subtract(byte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.subtract(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.addAndGet(byte)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.addAndGet(Number)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.getAndAdd(byte)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.getAndAdd(Number)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.byteValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.intValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.longValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.floatValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.doubleValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.toByte()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.equals(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.compareTo(MutableByte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableByte.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.MutableBoolean()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.MutableBoolean(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.MutableBoolean(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.setValue(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.setFalse()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.setTrue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.setValue(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.isTrue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.isFalse()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.booleanValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.toBoolean()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.equals(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.hashCode()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.compareTo(MutableBoolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableBoolean.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.MutableLong()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.MutableLong(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.MutableLong(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.MutableLong(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.setValue(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.setValue(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.increment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.getAndIncrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.incrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.decrement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.getAndDecrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.decrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.add(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.add(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.subtract(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.subtract(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.addAndGet(long)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.addAndGet(Number)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.getAndAdd(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.getAndAdd(Number)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.intValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.longValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.floatValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.doubleValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.toLong()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.equals(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.compareTo(MutableLong)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableLong.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.Mutable.getValue()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.Mutable.setValue(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.MutableDouble()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.MutableDouble(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.MutableDouble(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.MutableDouble(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.setValue(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.setValue(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.isNaN()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.isInfinite()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.increment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.getAndIncrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.incrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.decrement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.getAndDecrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.decrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.add(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.add(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.subtract(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.subtract(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.addAndGet(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.addAndGet(Number)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.getAndAdd(double)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.getAndAdd(Number)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.intValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.longValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.floatValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.doubleValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.toDouble()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.hashCode()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.compareTo(MutableDouble)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableDouble.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.MutableInt()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.MutableInt(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.MutableInt(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.MutableInt(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.setValue(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.setValue(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.increment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.getAndIncrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.incrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.decrement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.getAndDecrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.decrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.add(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.add(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.subtract(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.subtract(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.addAndGet(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.addAndGet(Number)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.getAndAdd(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.getAndAdd(Number)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.intValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.longValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.floatValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.doubleValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.toInteger()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.equals(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableInt.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableObject.MutableObject()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableObject.MutableObject(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableObject.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableObject.setValue(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableObject.equals(Object)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableObject.hashCode()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableObject.toString()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.MutableFloat()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.MutableFloat(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.MutableFloat(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.MutableFloat(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.setValue(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.setValue(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.isNaN()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.isInfinite()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.increment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.getAndIncrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.incrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.decrement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.getAndDecrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.decrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.add(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.add(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.subtract(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.subtract(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.addAndGet(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.addAndGet(Number)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.getAndAdd(float)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.getAndAdd(Number)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.intValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.longValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.floatValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.doubleValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.toFloat()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.compareTo(MutableFloat)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableFloat.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.MutableShort()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.MutableShort(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.MutableShort(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.MutableShort(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.setValue(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.setValue(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.increment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.getAndIncrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.incrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.decrement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.getAndDecrement()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.decrementAndGet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.add(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.add(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.subtract(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.subtract(Number)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.addAndGet(short)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.addAndGet(Number)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.getAndAdd(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.getAndAdd(Number)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.shortValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.intValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.longValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.floatValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.doubleValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.toShort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.equals(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.compareTo(MutableShort)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.mutable.MutableShort.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.translate(CharSequence,int,Writer)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.translate(CharSequence,int,Writer)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.StringEscapeUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeJava(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeEcmaScript(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeJson(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.unescapeJava(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.unescapeEcmaScript(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.unescapeJson(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeHtml4(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeHtml3(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.unescapeHtml3(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeXml(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeXml10(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeXml11(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.unescapeXml(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.escapeCsv(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.StringEscapeUtils.unescapeCsv(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.PairAdapter.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.PairAdapter.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.PairAdapter.setValue(R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.emptyArray()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.of(L,R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.of(R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.compareTo(R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.getLeft()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.getRight()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Pair.toString(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.emptyArray()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.of(L,M,R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.MutableTriple()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.MutableTriple(L,M,R)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.getMiddle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.setLeft(L)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.setMiddle(M)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutableTriple.setRight(R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.emptyArray()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.of(L,R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.of(R)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.MutablePair()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.MutablePair(L,R)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.setLeft(L)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.setRight(R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.MutablePair.setValue(R)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutableTriple.emptyArray()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutableTriple.nullTriple()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutableTriple.of(L,M,R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutableTriple.ImmutableTriple(L,M,R)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutableTriple.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutableTriple.getMiddle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutableTriple.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.emptyArray()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.left(L)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.nullPair()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.of(L,R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.of(R)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.right(R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.ImmutablePair(L,R)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.ImmutablePair.setValue(R)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.TripleAdapter.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.TripleAdapter.getMiddle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.TripleAdapter.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.emptyArray()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.of(L,M,R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.compareTo(R)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.getLeft()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.getMiddle()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.getRight()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.tuple.Triple.toString(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Charsets.toCharset(Charset)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Charsets.toCharset(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Charsets.toCharsetName(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSet.getInstance(String)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSet.CharSet(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSet.add(String)</name>
      <ncss>21</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSet.getCharRanges()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSet.contains(char)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSet.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSet.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSet.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.BitField(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.getValue(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.getShortValue(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.getRawValue(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.getShortRawValue(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.isSet(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.isAllSet(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.setValue(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.setShortValue(short,short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.clear(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.clearShort(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.clearByte(byte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.set(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.setShort(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.setByte(byte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.setBoolean(int,boolean)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.setShortBoolean(short,boolean)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BitField.setByteBoolean(byte,boolean)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.CharRange(char,char,boolean)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.is(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.isNot(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.isIn(char,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.isNotIn(char,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.getStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.getEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.isNegated()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.contains(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.contains(CharRange)</name>
      <ncss>9</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.hashCode()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.toString()</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.iterator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.CharacterIterator.CharacterIterator(CharRange)</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.CharacterIterator.prepareNext()</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.CharacterIterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.CharacterIterator.next()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharRange.CharacterIterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.InheritanceUtils.InheritanceUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class,Class)</name>
      <ncss>11</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.Typed.getType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(AccessibleObject)</name>
      <ncss>9</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.isAccessible(Member)</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.compareConstructorFit(Constructor,Constructor,Class[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.compareMethodFit(Method,Method,Class[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(Executable,Executable,Class[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(Class[],Executable)</name>
      <ncss>25</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(Class,Class)</name>
      <ncss>13</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(Class,Class)</name>
      <ncss>14</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.isMatchingMethod(Method,Class[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.isMatchingConstructor(Constructor,Class[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.isMatchingExecutable(Executable,Class[])</name>
      <ncss>15</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.Executable.of(Method)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.Executable.of(Constructor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.Executable.Executable(Method)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.Executable.Executable(Constructor)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.Executable.getParameterTypes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.MemberUtils.Executable.isVarArgs()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.TypeLiteral.TypeLiteral()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.TypeLiteral.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.TypeLiteral.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.TypeLiteral.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.TypeLiteral.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.ConstructorUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(T,Object)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(T,Object[],Class[])</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(T,Object)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(T,Object[],Class[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(T,Class)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(T)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(T,Class)</name>
      <ncss>17</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(Class)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.FieldUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.getField(Class,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.getField(Class,String,boolean)</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(Class,Annotation)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.getFieldsListWithAnnotation(Class,Annotation)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Field)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Field,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Class,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Class,String,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(Class,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(Class,String,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readField(Object,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readField(Object,String,boolean)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(Object,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(Object,String,boolean)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Field,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Field,Object,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Class,String,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Class,String,Object,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(Class,String,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(Class,String,Object,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean)</name>
      <ncss>14</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeField(Object,String,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeField(Object,String,Object,boolean)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(Object,String,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(Object,String,Object,boolean)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(java.util.Comparator[][])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(array[][])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(array[][])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(array[][])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(array[][])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(array[][])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(array[][])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(T[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ArraySorter.sort(T[],T)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.NotImplementedException.NotImplementedException()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.NotImplementedException.NotImplementedException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.NotImplementedException.NotImplementedException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.NotImplementedException.NotImplementedException(String,Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.NotImplementedException.NotImplementedException(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.NotImplementedException.NotImplementedException(Throwable,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.NotImplementedException.NotImplementedException(String,Throwable,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.NotImplementedException.getCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.RandomStringUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.random(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomAscii(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomAscii(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomGraph(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomGraph(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomNumeric(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomNumeric(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomPrint(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.randomPrint(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,boolean[],Random)</name>
      <ncss>49</ncss>
      <ccn>35</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.random(int,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomStringUtils.random(int,char)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableBooleanSupplier.getAsBoolean()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableRunnable.run()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableIntSupplier.getAsInt()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableDoubleSupplier.getAsDouble()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableDoubleBinaryOperator.applyAsDouble(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableLongSupplier.getAsLong()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableLongBinaryOperator.applyAsLong(long,long)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.ToBooleanBiFunction.applyAsBoolean(T,U)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableCallable.call()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableIntBinaryOperator.applyAsInt(int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableShortSupplier.getAsShort()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.function.FailableSupplier.get()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.Fraction(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getFraction(int,int)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)</name>
      <ncss>15</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)</name>
      <ncss>17</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getFraction(double)</name>
      <ncss>42</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getFraction(String)</name>
      <ncss>21</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getNumerator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getDenominator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getProperNumerator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.getProperWhole()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.intValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.longValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.floatValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.doubleValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.reduce()</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.invert()</name>
      <ncss>8</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.negate()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.abs()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.pow(int)</name>
      <ncss>16</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)</name>
      <ncss>28</ncss>
      <ccn>21</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.add(Fraction)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.subtract(Fraction)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.addSub(Fraction,boolean)</name>
      <ncss>20</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.multiplyBy(Fraction)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.divideBy(Fraction)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.hashCode()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.compareTo(Fraction)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.toString()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.Fraction.toProperString()</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.NumberUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toInt(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toInt(String,int)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toLong(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toLong(String,long)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toFloat(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toFloat(String,float)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toDouble(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toDouble(String,double)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toDouble(BigDecimal)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toDouble(BigDecimal,double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toByte(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toByte(String,byte)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toShort(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toShort(String,short)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(BigDecimal)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(BigDecimal,int,RoundingMode)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Float,int,RoundingMode)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Double,int,RoundingMode)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String,int,RoundingMode)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.createNumber(String)</name>
      <ncss>101</ncss>
      <ccn>83</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.getMantissa(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.getMantissa(String,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.isAllZeros(String)</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.createFloat(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.createDouble(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.createInteger(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.createLong(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.createBigInteger(String)</name>
      <ncss>22</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.createBigDecimal(String)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(long)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(short)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(byte)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(double)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(float)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(long)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(short)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(byte)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(double)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(float)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.validateArray(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(long,long,long)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(int,int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(short,short,short)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(byte,byte,byte)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.min(float,float,float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(long,long,long)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(int,int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(short,short,short)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(byte,byte,byte)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.max(float,float,float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.isDigits(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.isNumber(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.isCreatable(String)</name>
      <ncss>69</ncss>
      <ccn>73</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.isParsable(String)</name>
      <ncss>10</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.withDecimalsParsing(String,int)</name>
      <ncss>11</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.compare(int,int)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.compare(long,long)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.compare(short,short)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.min(double)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.min(float)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.max(double)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.max(float)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.FastDateParser(String,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.FastDateParser(String,TimeZone,Locale,Date)</name>
      <ncss>18</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.init(Calendar)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth.StrategyAndWidth(Strategy,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth.getMaxWidth(StrategyAndWidth)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.StrategyParser.StrategyParser(Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.StrategyParser.getNextStrategy()</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.StrategyParser.letterPattern(char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.StrategyParser.literal()</name>
      <ncss>17</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.isFormatLetter(char)</name>
      <ncss>2</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.getPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.getTimeZone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.getLocale()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.toStringAll()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.readObject(ObjectInputStream)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.parseObject(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.parse(String)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.parseObject(String,ParsePosition)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.parse(String,ParsePosition)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.parse(String,ParsePosition,Calendar)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.simpleQuote(StringBuilder,String)</name>
      <ncss>22</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.appendDisplayNames(Calendar,Locale,int,StringBuilder)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.adjustYear(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.Strategy.isNumber()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.Strategy.parse(FastDateParser,Calendar,String,ParsePosition,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.PatternStrategy.createPattern(StringBuilder)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.PatternStrategy.createPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.PatternStrategy.isNumber()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.PatternStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.PatternStrategy.setCalendar(FastDateParser,Calendar,String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.PatternStrategy.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.getStrategy(char,int,Calendar)</name>
      <ncss>48</ncss>
      <ccn>47</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.getCache(int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,Calendar)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy.CopyQuotedStrategy(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy.isNumber()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale)</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.setCalendar(FastDateParser,Calendar,String)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy.NumberStrategy(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy.isNumber()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy.modify(FastDateParser,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy$1.modify(FastDateParser,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TzInfo.TzInfo(TimeZone,boolean)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale)</name>
      <ncss>31</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.getStrategy(int)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy$1.modify(FastDateParser,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy$1.modify(FastDateParser,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy$1.modify(FastDateParser,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateParser.NumberStrategy$1.modify(FastDateParser,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.FormatCache$1.createInstance(String,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getInstance()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getInstance(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getInstance(String,TimeZone)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getInstance(String,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getInstance(String,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,TimeZone)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,TimeZone)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,TimeZone)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.FastDateFormat(String,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.FastDateFormat(String,TimeZone,Locale,Date)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(Object,StringBuffer,FieldPosition)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(Date)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(long,StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(Date,StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(Calendar,StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(long,B)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(Date,B)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.format(Calendar,B)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.parse(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.parse(String,ParsePosition)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.parse(String,ParsePosition,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.parseObject(String,ParsePosition)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getTimeZone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getLocale()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.getMaxLengthEstimate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDateFormat.applyRules(Calendar,StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStarted()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStopped()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isSuspended()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStarted()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStopped()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isSuspended()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStarted()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStopped()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isSuspended()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStarted()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStopped()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isSuspended()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStarted()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isStopped()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.State.isSuspended()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.create()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.createStarted()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.StopWatch()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.StopWatch(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.formatSplitTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.formatTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.getMessage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.getNanoTime()</name>
      <ncss>10</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.getSplitTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.getStartTime()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.getStopTime()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.getTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.getTime(TimeUnit)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.isStarted()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.isStopped()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.isSuspended()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.reset()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.resume()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.split()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.start()</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.stop()</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.suspend()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.toSplitString()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.toString()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.StopWatch.unsplit()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.getInstance()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.getInstance(String,TimeZone,Locale)</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.createInstance(String,TimeZone,Locale)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(Integer,Integer,TimeZone,Locale)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.getDateInstance(int,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.getPatternForStyle(Integer,Integer,Locale)</name>
      <ncss>20</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.ArrayKey.computeHashCode(Object[])</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.ArrayKey.ArrayKey(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.ArrayKey.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FormatCache.ArrayKey.equals(Object)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.GmtTimeZone(boolean,int,int)</name>
      <ncss>8</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.twoDigits(StringBuilder,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.getOffset(int,int,int,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.setRawOffset(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.getRawOffset()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.getID()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.useDaylightTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.inDaylightTime(Date)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.GmtTimeZone.equals(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.TimeZones.TimeZones()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateParser.parse(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateParser.parse(String,ParsePosition)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateParser.parse(String,ParsePosition,Calendar)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateParser.getPattern()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateParser.getTimeZone()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateParser.getLocale()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateParser.parseObject(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateParser.parseObject(String,ParsePosition)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.CalendarUtils.CalendarUtils(Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.CalendarUtils.getDayOfMonth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.CalendarUtils.getMonth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.CalendarUtils.getYear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationUtils.accept(T,Duration)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationUtils.getNanosOfMiili(Duration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationUtils.isPositive(Duration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationUtils.toChronoUnit(TimeUnit)</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationUtils.toDuration(long,TimeUnit)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationUtils.toMillisInt(Duration)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationUtils.zeroIfNull(Duration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.DateUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.isSameDay(Date,Date)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.isSameDay(Calendar,Calendar)</name>
      <ncss>4</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.isSameInstant(Date,Date)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.isSameInstant(Calendar,Calendar)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.isSameLocalTime(Calendar,Calendar)</name>
      <ncss>4</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.parseDate(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.parseDate(String,Locale,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.parseDateStrictly(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.parseDateStrictly(String,Locale,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(String,Locale,String[],boolean)</name>
      <ncss>16</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.addYears(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.addMonths(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.addWeeks(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.addDays(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.addHours(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.addMinutes(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.addSeconds(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.addMilliseconds(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.add(Date,int,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.setYears(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.setMonths(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.setDays(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.setHours(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.setMinutes(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.setSeconds(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.setMilliseconds(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.set(Date,int,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.toCalendar(Date)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.toCalendar(Date,TimeZone)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.round(Date,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.round(Calendar,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.nullDateIllegalArgumentException()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.round(Object,int)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.truncate(Date,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.truncate(Object,int)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.ceiling(Date,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.ceiling(Object,int)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)</name>
      <ncss>74</ncss>
      <ccn>36</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.iterator(Date,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.iterator(Calendar,int)</name>
      <ncss>57</ncss>
      <ccn>21</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.iterator(Object,int)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInHours(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInDays(Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(Calendar,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(Calendar,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(Calendar,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInHours(Calendar,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragmentInDays(Calendar,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,TimeUnit)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit)</name>
      <ncss>32</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.truncatedEquals(Calendar,Calendar,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.truncatedEquals(Date,Date,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(Calendar,Calendar,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(Date,Date,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.validateDateNotNull(Date)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.DateIterator.DateIterator(Calendar,Calendar)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.DateIterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.DateIterator.next()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateUtils.DateIterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.FastDatePrinter(String,TimeZone,Locale)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.init()</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.parsePattern()</name>
      <ncss>119</ncss>
      <ccn>37</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.parseToken(String,String[])</name>
      <ncss>33</ncss>
      <ccn>16</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(Object,StringBuffer,FieldPosition)</name>
      <ncss>11</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(Object)</name>
      <ncss>11</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.applyRulesToString(Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.newCalendar()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(Date)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(long,StringBuffer)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(Date,StringBuffer)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(Calendar,StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(long,B)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(Date,B)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.format(Calendar,B)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.applyRules(Calendar,StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.applyRules(Calendar,B)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.getPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.getTimeZone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.getLocale()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.getMaxLengthEstimate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.readObject(ObjectInputStream)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.appendFullDigits(Appendable,int,int)</name>
      <ncss>40</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.Rule.estimateLength()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.Rule.appendTo(Appendable,Calendar)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(Appendable,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral.CharacterLiteral(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.StringLiteral.StringLiteral(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.StringLiteral.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.StringLiteral.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TextField.TextField(int,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TextField.estimateLength()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TextField.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.UnpaddedNumberField(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(Appendable,int)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.UnpaddedMonthField()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.appendTo(Appendable,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.PaddedNumberField(int,int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(Appendable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.TwoDigitNumberField(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(Appendable,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.TwoDigitYearField()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(Appendable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.TwoDigitMonthField()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(Appendable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField.TwelveHourField(NumberRule)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField.appendTo(Appendable,Calendar)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField.appendTo(Appendable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField.TwentyFourHourField(NumberRule)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField.appendTo(Appendable,Calendar)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField.appendTo(Appendable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField.DayInWeekField(NumberRule)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField.appendTo(Appendable,Calendar)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField.appendTo(Appendable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.WeekYear.WeekYear(NumberRule)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.WeekYear.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.WeekYear.appendTo(Appendable,Calendar)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.WeekYear.appendTo(Appendable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(TimeZone,boolean,int,Locale)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.TimeZoneNameRule(TimeZone,Locale,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.appendTo(Appendable,Calendar)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(Appendable,Calendar)</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.getRule(int)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.Iso8601_Rule(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.estimateLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.appendTo(Appendable,Calendar)</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(long)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(Date)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(Calendar)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(long,StringBuffer)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(Date,StringBuffer)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(Calendar,StringBuffer)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(long,B)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(Date,B)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(Calendar,B)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.getPattern()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.getTimeZone()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.getLocale()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DatePrinter.format(Object,StringBuffer,FieldPosition)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone(String)</name>
      <ncss>11</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastTimeZone.getTimeZone(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastTimeZone.parseInt(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastTimeZone.parseSign(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.FastTimeZone.FastTimeZone()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.DurationFormatUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.formatDurationISO(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean)</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)</name>
      <ncss>32</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.formatPeriodISO(long,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone)</name>
      <ncss>71</ncss>
      <ccn>23</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean)</name>
      <ncss>41</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.lexx(String)</name>
      <ncss>58</ncss>
      <ccn>19</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.Token(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.Token(Object,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.increment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.getCount()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.equals(Object)</name>
      <ncss>15</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DurationFormatUtils.Token.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.DateFormatUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.formatUTC(Date,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,String,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.formatUTC(Date,String,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(long,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(Date,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(long,String,TimeZone)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,TimeZone)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(long,String,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(long,String,TimeZone,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,TimeZone,Locale)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ClassLoaderUtils.toString(ClassLoader)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ClassLoaderUtils.toString(URLClassLoader)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.CharSequenceUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.subSequence(CharSequence,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int)</name>
      <ncss>19</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)</name>
      <ncss>10</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int)</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,CharSequence,int)</name>
      <ncss>43</ncss>
      <ccn>33</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.checkLaterThan1(CharSequence,CharSequence,int,int)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence)</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)</name>
      <ncss>24</ncss>
      <ccn>18</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharEncoding.isSupported(String)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.CharUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toCharacterObject(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toCharacterObject(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toChar(Character)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toChar(Character,char)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toChar(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toChar(String,char)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toIntValue(char)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toIntValue(char,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toIntValue(Character)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toIntValue(Character,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toString(char)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.toString(Character)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.unicodeEscaped(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.unicodeEscaped(Character)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.isAscii(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.isAsciiPrintable(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.isAsciiControl(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.isAsciiAlpha(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.isAsciiAlphanumeric(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharUtils.compare(char,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationException.SerializationException()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationException.SerializationException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationException.SerializationException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.SerializationException.SerializationException(String,Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.JavaVersion.JavaVersion(float,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.JavaVersion.atLeast(JavaVersion)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.JavaVersion.atMost(JavaVersion)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.JavaVersion.getJavaVersion(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.JavaVersion.get(String)</name>
      <ncss>51</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.JavaVersion.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.JavaVersion.maxVersion()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.JavaVersion.toFloatVersion(String)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.Arch.Arch(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.Arch.getLabel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.Processor(Arch,Type)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.getArch()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.is32Bit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.is64Bit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.isX86()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.isIA64()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.arch.Processor.isPPC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreaker.isOpen()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreaker.isClosed()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreaker.checkState()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreaker.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreaker.open()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreaker.incrementAndCheckState(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AtomicInitializer.get()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AtomicInitializer.initialize()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConstantInitializer.ConstantInitializer(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConstantInitializer.getObject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConstantInitializer.get()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConstantInitializer.hashCode()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConstantInitializer.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConstantInitializer.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.Computable.compute(I)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentException.ConcurrentException()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentException.ConcurrentException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentException.ConcurrentException(String,Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.ConcurrentUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCause(ExecutionException)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(ExecutionException)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(ExecutionException)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCauseUnchecked(ExecutionException)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ExecutionException)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.initialize(T)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.initializeUnchecked(T)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(V,K,V)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(V,K,V)</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsentUnchecked(V,K,V)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.constantFuture(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture.ConstantFuture(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture.isDone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture.get()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture.get(long,TimeUnit)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture.isCancelled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture.cancel(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.ConcurrentRuntimeException()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.ConcurrentRuntimeException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.ConcurrentRuntimeException(String,Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.ThresholdCircuitBreaker(long)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.getThreshold()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.checkState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.close()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.incrementAndCheckState(Long)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.BackgroundInitializer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.BackgroundInitializer(ExecutorService)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.getExternalExecutor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.isStarted()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.setExternalExecutor(ExecutorService)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.start()</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.get()</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.getFuture()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.getActiveExecutor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.getTaskCount()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.initialize()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.createTask(ExecutorService)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.createExecutor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.InitializationTask.InitializationTask(ExecutorService)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BackgroundInitializer.InitializationTask.call()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.BasicThreadFactory(Builder)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.getWrappedFactory()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.getNamingPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.getDaemonFlag()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.getThreadCount()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.newThread(Runnable)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(Thread)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.wrappedFactory(ThreadFactory)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.namingPattern(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.daemon(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.priority(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.uncaughtExceptionHandler(Thread.UncaughtExceptionHandler)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.reset()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.build()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.ConcurrentInitializer.get()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.AbstractCircuitBreaker()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isOpen()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isClosed()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.checkState()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.incrementAndCheckState(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.close()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.open()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isOpen(State)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.changeState(State)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.addChangeListener(PropertyChangeListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.removeChangeListener(PropertyChangeListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.oppositeState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.oppositeState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.oppositeState()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.LazyInitializer.get()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.LazyInitializer.initialize()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreakingException.CircuitBreakingException()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreakingException.CircuitBreakingException(String,Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreakingException.CircuitBreakingException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CircuitBreakingException.CircuitBreakingException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializer()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializer(ExecutorService)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.addInitializer(String,BackgroundInitializer)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.initialize()</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.MultiBackgroundInitializerResults(BackgroundInitializer,Object,ConcurrentException)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.getInitializer(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.getResultObject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.isException(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.getException(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.initializerNames()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.isSuccessful()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.EventCountCircuitBreaker(int,long,TimeUnit,int,long,TimeUnit)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.EventCountCircuitBreaker(int,long,TimeUnit,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.EventCountCircuitBreaker(int,long,TimeUnit)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getOpeningThreshold()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getOpeningInterval()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getClosingThreshold()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getClosingInterval()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.checkState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.incrementAndCheckState(Integer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.incrementAndCheckState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.open()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.close()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.performStateCheck(int)</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.updateCheckIntervalData(CheckIntervalData,CheckIntervalData)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.changeStateAndStartNewCheckInterval(State)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.nextCheckIntervalData(int,CheckIntervalData,State,long)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.nanoTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.stateStrategy(State)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.createStrategyMap()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData.CheckIntervalData(int,long)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData.getEventCount()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData.getCheckIntervalStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData.increment(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategy.isCheckIntervalFinished(EventCountCircuitBreaker,CheckIntervalData,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategy.isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategy.fetchCheckInterval(EventCountCircuitBreaker)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyClosed.isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyClosed.fetchCheckInterval(EventCountCircuitBreaker)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyOpen.isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyOpen.fetchCheckInterval(EventCountCircuitBreaker)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.CallableBackgroundInitializer(T)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.CallableBackgroundInitializer(T,ExecutorService)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.initialize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.checkCallable(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.concurrent.AtomicSafeInitializer.initialize()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.RandomUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextBoolean()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextBytes(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextInt(int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextInt()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextLong(long,long)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextLong()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextLong(long)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextDouble(double,double)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextDouble()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextFloat(float,float)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RandomUtils.nextFloat()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.removeAll(String,Pattern)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.removeAll(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.removeFirst(String,Pattern)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.removeFirst(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.removePattern(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.replaceAll(String,Pattern,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.replaceAll(String,String,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.replaceFirst(String,Pattern,String)</name>
      <ncss>4</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.replaceFirst(String,String,String)</name>
      <ncss>4</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.RegExUtils.replacePattern(String,String,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.ComparableComparator.compare(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.between(T,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.between(T,T,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.is(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.is(T,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.Range(T,T,T)</name>
      <ncss>13</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.contains(T)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.containsRange(T)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.elementCompareTo(T)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.equals(Object)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.getComparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.getMaximum()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.getMinimum()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.hashCode()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.intersectionWith(T)</name>
      <ncss>8</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.isAfter(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.isAfterRange(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.isBefore(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.isBeforeRange(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.isEndedBy(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.isNaturalOrdering()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.isOverlappedBy(T)</name>
      <ncss>4</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.isStartedBy(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.fit(T)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.toString()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.Range.toString(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.compare.ObjectToStringComparator.compare(Object,Object)</name>
      <ncss>16</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(Object,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(Object,V,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(Object,Properties)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(V,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(V,String,String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(V,String,String,char,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup,String,String,char)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup,String,String,char,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup,StrMatcher,StrMatcher,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup,StrMatcher,StrMatcher,char,StrMatcher)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(String)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(String,int,int)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(String[])</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(String[],int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(StringBuffer)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(StringBuffer,int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(StrBuilder)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(StrBuilder,int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replace(Object)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuffer)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuffer,int,int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StrBuilder)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StrBuilder,int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int,String)</name>
      <ncss>85</ncss>
      <ccn>23</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(String,String)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(String,StrBuilder,int,int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.getEscapeChar()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setEscapeChar(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.getVariablePrefixMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setVariablePrefixMatcher(StrMatcher)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setVariablePrefix(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setVariablePrefix(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.getVariableSuffixMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setVariableSuffixMatcher(StrMatcher)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setVariableSuffix(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setVariableSuffix(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.getValueDelimiterMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(StrMatcher)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiter(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiter(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.getVariableResolver()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setVariableResolver(StrLookup)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.isEnableSubstitutionInVariables()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setEnableSubstitutionInVariables(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.isPreserveEscapes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrSubstitutor.setPreserveEscapes(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityUnescaper.NumericEntityUnescaper(OPTION)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(OPTION)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(CharSequence,int,Writer)</name>
      <ncss>36</ncss>
      <ccn>28</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.AggregateTranslator.AggregateTranslator(CharSequenceTranslator)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.AggregateTranslator.translate(CharSequence,int,Writer)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,int,Writer)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,Writer)</name>
      <ncss>21</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(CharSequenceTranslator)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer)</name>
      <ncss>15</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.above(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.below(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.between(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.JavaUnicodeEscaper(int,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[])</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(CharSequence,int,Writer)</name>
      <ncss>16</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper.UnicodeEscaper()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper.UnicodeEscaper(int,int,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper.below(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper.above(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper.between(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer)</name>
      <ncss>16</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_ESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_UNESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_ESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_UNESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.BASIC_ESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.BASIC_UNESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.APOS_ESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.APOS_UNESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_ESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_UNESCAPE()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.EntityArrays.invert(String[][])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityEscaper.NumericEntityEscaper(int,int,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityEscaper.NumericEntityEscaper()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityEscaper.below(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityEscaper.above(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,Writer)</name>
      <ncss>11</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.CodePointTranslator.translate(CharSequence,int,Writer)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.translate.CodePointTranslator.translate(int,Writer)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilder(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilder(String)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.getNewLineText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.setNewLineText(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.getNullText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.setNullText(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.length()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.setLength(int)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.capacity()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.isNotEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.clear()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.charAt(int)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.toCharArray()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.getChars(chars[][])</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.getChars(int,int,int[],int)</name>
      <ncss>8</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.readFrom(Readable)</name>
      <ncss>25</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendNewLine()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendNull()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(Object)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(CharSequence)</name>
      <ncss>12</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(CharSequence,int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(String)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(String,int,int)</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(String,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(CharBuffer)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(CharBuffer,int,int)</name>
      <ncss>16</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(StringBuffer)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(StringBuffer,int,int)</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(StringBuilder)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(StringBuilder,int,int)</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(StrBuilder)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(StrBuilder,int,int)</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(StrBuilder[])</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(StrBuilder[],int,int)</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(boolean)</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(char)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.append(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(String,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(String,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(StringBuilder)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(StringBuilder,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(StringBuffer,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(StrBuilder)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(StrBuilder,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(StrBuilder[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(StrBuilder[],int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendln(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendAll(T)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendAll(Iterable)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendAll(Iterator)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(Object[],String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(Iterable,String)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(Iterator,String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendSeparator(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendSeparator(String,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendSeparator(char)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,char)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendSeparator(String,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(Object,int,char)</name>
      <ncss>16</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(int,int,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(Object,int,char)</name>
      <ncss>16</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(int,int,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,String)</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,int[])</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,int[],int,int)</name>
      <ncss>14</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,char)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.insert(int,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.delete(int,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.deleteAll(char)</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.deleteAll(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.deleteFirst(String)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.deleteAll(StrMatcher)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.deleteFirst(StrMatcher)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,String,int)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replace(int,int,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replaceAll(String,String)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replaceFirst(String,String)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replaceAll(StrMatcher,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replaceFirst(StrMatcher,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replace(StrMatcher,String,int,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.replaceImpl(StrMatcher,String,int,int,int)</name>
      <ncss>14</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.reverse()</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.trim()</name>
      <ncss>15</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.startsWith(String)</name>
      <ncss>12</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.endsWith(String)</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)</name>
      <ncss>8</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.substring(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.substring(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.leftString(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.rightString(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.midString(int,int)</name>
      <ncss>8</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.contains(char)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.contains(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.contains(StrMatcher)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.indexOf(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.indexOf(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.indexOf(String,int)</name>
      <ncss>20</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.indexOf(StrMatcher)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.indexOf(StrMatcher,int)</name>
      <ncss>10</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)</name>
      <ncss>8</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.lastIndexOf(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.lastIndexOf(String,int)</name>
      <ncss>18</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.lastIndexOf(StrMatcher)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.lastIndexOf(StrMatcher,int)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.asTokenizer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.asReader()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.asWriter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.appendTo(Appendable)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(StrBuilder)</name>
      <ncss>13</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.equals(StrBuilder)</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.hashCode()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.toStringBuffer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.toStringBuilder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.build()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.validateIndex(int)</name>
      <ncss>3</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer.StrBuilderTokenizer()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer.tokenize(String[],int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer.getContent()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.StrBuilderReader()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.read()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.read(int[],int,int)</name>
      <ncss>12</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.skip(long)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.ready()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.markSupported()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.mark(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.reset()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.StrBuilderWriter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.flush()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.write(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.write(Override[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.write(Override[],int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.write(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.write(String,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.CompositeFormat.CompositeFormat(Format,Format)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.CompositeFormat.format(Object,StringBuffer,FieldPosition)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.CompositeFormat.parseObject(String,ParsePosition)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.CompositeFormat.getParser()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.CompositeFormat.getFormatter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.CompositeFormat.reformat(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getCSVClone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getCSVInstance()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(StrTokenizer[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getTSVClone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getTSVInstance()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(StrTokenizer[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(String,char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(String,StrMatcher)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(String,char,char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(String,StrMatcher,StrMatcher)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(quote[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(input[],char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(delim[],String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(delim[],StrMatcher)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(delim[],char,char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.StrTokenizer(quote[],StrMatcher,StrMatcher)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.size()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.nextToken()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.previousToken()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getTokenArray()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getTokenList()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.reset()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.reset(String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.reset(StrTokenizer[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.hasNext()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.next()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.nextIndex()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.hasPrevious()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.previous()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.previousIndex()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.set(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.add(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.checkTokenized()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.tokenize(String[],int,int)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.addToken(String,String)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.readNextToken(int[],int,int,StrBuilder,String)</name>
      <ncss>17</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(int[],int,int,StrBuilder,String,int,int)</name>
      <ncss>40</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.isQuote(boolean[],int,int,int,int)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(StrMatcher)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setDelimiterChar(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setDelimiterString(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(StrMatcher)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setQuoteChar(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(StrMatcher)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setIgnoredChar(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setTrimmerMatcher(StrMatcher)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setEmptyTokenAsNull(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.getContent()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.clone()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.cloneReset()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrTokenizer.toString()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.commaMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.tabMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.spaceMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.splitMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.trimMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.quoteMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.noneMatcher()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.charMatcher(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char)</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.charSetMatcher(String)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.stringMatcher(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.StrMatcher()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.isMatch(int[],int,int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.isMatch(int[],int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.CharSetMatcher.CharSetMatcher(StrMatcher[][])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.CharSetMatcher.isMatch(int[],int,int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.CharMatcher.CharMatcher(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.CharMatcher.isMatch(int[],int,int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.StringMatcher.StringMatcher(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.StringMatcher.isMatch(int[],int,int,int)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.StringMatcher.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.NoMatcher.NoMatcher()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.NoMatcher.isMatch(int[],int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.TrimMatcher.TrimMatcher()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrMatcher.TrimMatcher.isMatch(int[],int,int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.FormattableUtils.FormattableUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.FormattableUtils.toString(Formattable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,CharSequence)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char,CharSequence)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.FormatFactory.getFormat(String,String,Locale)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.ExtendedMessageFormat(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.ExtendedMessageFormat(String,Locale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.ExtendedMessageFormat(String,FormatFactory)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.ExtendedMessageFormat(String,Locale,FormatFactory)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.toPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String)</name>
      <ncss>49</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.setFormat(int,Format)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.setFormatByArgumentIndex(int,Format)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.setFormats(Format[])</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.setFormatsByArgumentIndex(Format[])</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.equals(Object)</name>
      <ncss>13</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(String)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(String,ParsePosition)</name>
      <ncss>21</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition)</name>
      <ncss>21</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,String)</name>
      <ncss>28</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(String,ParsePosition)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.next(ParsePosition)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder)</name>
      <ncss>14</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.ExtendedMessageFormat.containsElements(Collection)</name>
      <ncss>7</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.WordUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.wrap(String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean,String)</name>
      <ncss>47</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.capitalize(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.capitalize(String,char)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.capitalizeFully(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.capitalizeFully(String,char)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.uncapitalize(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.uncapitalize(String,char)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.swapCase(String)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.initials(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.initials(String,char)</name>
      <ncss>20</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.containsAllWords(CharSequence,CharSequence)</name>
      <ncss>10</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.WordUtils.isDelimiter(char,char[])</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrLookup.noneLookup()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrLookup.mapLookup(V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrLookup.StrLookup()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrLookup.lookup(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrLookup.MapStrLookup.MapStrLookup(V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrLookup.MapStrLookup.lookup(String)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.text.StrLookup.SystemPropertiesStrLookup.lookup(String)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.ToStringStyle$1.getShortClassName(Class)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.ToStringStyle$1.appendDetail(StringBuffer,String,Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.AnnotationUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.equals(Annotation,Annotation)</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.hashCode(Annotation)</name>
      <ncss>13</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.toString(Annotation)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(Class)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.hashMember(String,Object)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.memberEquals(Class,Object,Object)</name>
      <ncss>10</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(Class,Object,Object)</name>
      <ncss>20</ncss>
      <ccn>19</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(Annotation[],Annotation[])</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(Class,Object)</name>
      <ncss>18</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.and(boolean)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.and(Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.booleanValues()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.isFalse(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.isNotFalse(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.isNotTrue(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.isTrue(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.negate(Boolean)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.or(boolean)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.or(Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.primitiveValues()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBoolean(Boolean)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBoolean(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBoolean(Integer,Integer,Integer)</name>
      <ncss>13</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBoolean(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBoolean(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBooleanDefaultIfNull(Boolean,boolean)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBooleanObject(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)</name>
      <ncss>8</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBooleanObject(Integer)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBooleanObject(Integer,Integer,Integer,Integer)</name>
      <ncss>18</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBooleanObject(String)</name>
      <ncss>50</ncss>
      <ccn>66</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toBooleanObject(String,String,String,String)</name>
      <ncss>18</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toInteger(boolean)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toInteger(boolean,int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toInteger(Boolean,int,int,int)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean,Integer,Integer)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toIntegerObject(Boolean)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toIntegerObject(Boolean,Integer,Integer,Integer)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toString(boolean,String,String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toString(Boolean,String,String,String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toStringOnOff(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toStringOnOff(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toStringTrueFalse(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toStringTrueFalse(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toStringYesNo(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.toStringYesNo(Boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.xor(boolean)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.xor(Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.BooleanUtils.BooleanUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ClassPathUtils.ClassPathUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Class,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Package,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Class,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.RecursiveToStringStyle.RecursiveToStringStyle()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Collection)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.RecursiveToStringStyle.accept(Class)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.Builder.build()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.StandardToStringStyle()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.isUseClassName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setUseClassName(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.isUseShortClassName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setUseShortClassName(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.isUseIdentityHashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setUseIdentityHashCode(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.isUseFieldNames()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setUseFieldNames(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.isDefaultFullDetail()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setDefaultFullDetail(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.isArrayContentDetail()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setArrayContentDetail(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getArrayStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setArrayStart(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getArrayEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setArrayEnd(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getArraySeparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setArraySeparator(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getContentStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setContentStart(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getContentEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setContentEnd(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getFieldNameValueSeparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setFieldNameValueSeparator(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getFieldSeparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setFieldSeparator(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.isFieldSeparatorAtStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setFieldSeparatorAtStart(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.isFieldSeparatorAtEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setFieldSeparatorAtEnd(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getNullText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setNullText(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getSizeStartText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setSizeStartText(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getSizeEndText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setSizeEndText(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getSummaryObjectStartText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setSummaryObjectStartText(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.getSummaryObjectEndText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.StandardToStringStyle.setSummaryObjectEndText(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getRegistry()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isRegistered(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.register(Object)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.unregister(Object)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.ToStringStyle()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSuper(StringBuffer,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendToString(StringBuffer,String)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendStart(StringBuffer,Object)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendEnd(StringBuffer,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(StringBuffer)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,Object,Boolean)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendInternal(StringBuffer,String,Object,boolean)</name>
      <ncss>77</ncss>
      <ccn>29</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendCyclicObject(StringBuffer,String,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,Collection)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,Object)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,byte)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,byte)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,double)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,float)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,Object[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,Object[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,int,Object)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,Object[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummary(StringBuffer,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendClassName(StringBuffer,Object)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(StringBuffer,Object)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendContentEnd(StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendNullText(StringBuffer,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(StringBuffer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(StringBuffer,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(StringBuffer,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(StringBuffer,String,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(Boolean)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getShortClassName(Class)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isUseClassName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setUseClassName(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isUseShortClassName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setUseShortClassName(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isUseIdentityHashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setUseIdentityHashCode(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isUseFieldNames()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setUseFieldNames(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isDefaultFullDetail()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setDefaultFullDetail(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isArrayContentDetail()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setArrayContentDetail(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getArrayStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setArrayStart(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getArrayEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setArrayEnd(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getArraySeparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setArraySeparator(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getContentStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setContentStart(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getContentEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getFieldNameValueSeparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setFieldNameValueSeparator(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getFieldSeparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setFieldSeparator(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isFieldSeparatorAtStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setFieldSeparatorAtStart(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.isFieldSeparatorAtEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setFieldSeparatorAtEnd(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getNullText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setNullText(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getSizeStartText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setSizeStartText(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getSizeEndText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setSizeEndText(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getSummaryObjectStartText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setSummaryObjectStartText(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.getSummaryObjectEndText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.setSummaryObjectEndText(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle.DefaultToStringStyle()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle.NoFieldNameToStringStyle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle.ShortPrefixToStringStyle()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle.SimpleToStringStyle()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle.MultiLineToStringStyle()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle.NoClassNameToStringStyle()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.JsonToStringStyle()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,Object[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,String[],Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.append(StringBuffer,String,Object,Boolean)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.appendDetail(StringBuffer,String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.appendDetail(StringBuffer,String,Object)</name>
      <ncss>15</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.appendDetail(StringBuffer,String,Collection)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.appendDetail(StringBuffer,String,Map)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.isJsonArray(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.isJsonObject(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.appendValueAsString(StringBuffer,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.appendFieldStart(StringBuffer,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.CompareToBuilder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,boolean,Class,String)</name>
      <ncss>14</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class,CompareToBuilder,boolean,String[])</name>
      <ncss>9</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(Object,Object,Comparator)</name>
      <ncss>21</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.appendArray(Object,Object,Comparator)</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(Object[],Object[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(Object[],Object[],Comparator)</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(CompareToBuilder[],CompareToBuilder[][])</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(CompareToBuilder[],CompareToBuilder[][])</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(CompareToBuilder[],CompareToBuilder[][])</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(CompareToBuilder[],CompareToBuilder[][])</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(CompareToBuilder[],CompareToBuilder[][])</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(CompareToBuilder[],CompareToBuilder[][])</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(CompareToBuilder[],CompareToBuilder[][])</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.append(CompareToBuilder[],CompareToBuilder[][])</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.toComparison()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.CompareToBuilder.build()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.DiffResult(T,T,Diff,ToStringStyle)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.getDiffs()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.getNumberOfDiffs()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.getToStringStyle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffResult.iterator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(T,T,ToStringStyle,boolean)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(T,T,ToStringStyle)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,boolean,boolean)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,String[],String[][])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,byte,byte)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,String[],String[][])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,char,char)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,String[],String[][])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,double,double)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,String[],String[][])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,float,float)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,String[],String[][])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,int,int)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,String[],String[][])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,long,long)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,String[],String[][])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,short,short)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,String[],String[][])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object)</name>
      <ncss>38</ncss>
      <ccn>27</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getLeft()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.Diff$1.getRight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,Object[],Object[])</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.append(String,T)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.build()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.DiffBuilder.validateFieldNameNotNull(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.Diffable.diff(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ReflectionDiffBuilder.ReflectionDiffBuilder(T,T,ToStringStyle)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ReflectionDiffBuilder.build()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ReflectionDiffBuilder.appendFields(Class)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ReflectionDiffBuilder.accept(Field)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.getDefaultStyle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.setDefaultStyle(ToStringStyle)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(Object,ToStringStyle)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(Object,ToStringStyle,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(T,ToStringStyle,boolean,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.ToStringBuilder(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.ToStringBuilder(Object,ToStringStyle)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.ToStringBuilder(Object,ToStringStyle,StringBuffer)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(ToStringBuilder[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(byte)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(ToStringBuilder[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(ToStringBuilder[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(ToStringBuilder[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(ToStringBuilder[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(ToStringBuilder[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(long)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(ToStringBuilder[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(Object[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(short)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(ToStringBuilder[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,byte)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,long)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,Object,boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,Object[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,Object[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,short)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.append(String,String[],boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.appendAsObjectToString(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.appendSuper(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.appendToString(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.getObject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.getStyle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.toString()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.ToStringBuilder.build()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.Diff.Diff(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.Diff.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.Diff.getFieldName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.Diff.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.Diff.setValue(T)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.MultilineRecursiveToStringStyle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,Object)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,Object[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,String[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(Object,Object)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.register(Object,Object)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.unregister(Object,Object)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.EqualsBuilder()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.setTestTransients(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.setTestRecursive(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.setBypassReflectionClasses(Class)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.setReflectUpToClass(Class)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.setExcludeFields(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class,boolean,String)</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object)</name>
      <ncss>36</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class)</name>
      <ncss>14</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object)</name>
      <ncss>17</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.appendArray(Object,Object)</name>
      <ncss>29</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(long,long)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(int,int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(short,short)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(char,char)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(Object[],Object[])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(EqualsBuilder[],EqualsBuilder[][])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(EqualsBuilder[],EqualsBuilder[][])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(EqualsBuilder[],EqualsBuilder[][])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(EqualsBuilder[],EqualsBuilder[][])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(EqualsBuilder[],EqualsBuilder[][])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(EqualsBuilder[],EqualsBuilder[][])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(EqualsBuilder[],EqualsBuilder[][])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.append(EqualsBuilder[],EqualsBuilder[][])</name>
      <ncss>14</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.isEquals()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.build()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.setEquals(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.EqualsBuilder.reset()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.IDKey.IDKey(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.IDKey.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.builder.IDKey.equals(Object)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.CloneFailedException.CloneFailedException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.CloneFailedException.CloneFailedException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.CloneFailedException.CloneFailedException(String,Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionContext.addContextValue(String,Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionContext.setContextValue(String,Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionContext.getContextValues(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionContext.getFirstContextValue(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionContext.getContextLabels()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionContext.getContextEntries()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getCause(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getCause(Throwable,String[])</name>
      <ncss>14</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(Throwable,String)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getDefaultCauseMethodNames()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getMessage(Throwable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(Throwable)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseMessage(Throwable)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(Throwable)</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(Throwable)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(Throwable)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(Throwable)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getThrowableCount(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(Throwable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.hasCause(Throwable,Throwable)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.indexOf(Throwable,Throwable,int,boolean)</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(Throwable,Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(Throwable,Throwable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(Throwable,Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(Throwable,Throwable,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintStream)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintWriter)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(String,String)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.rethrow(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.throwableOf(Throwable,T,int,boolean)</name>
      <ncss>17</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.throwableOfThrowable(Throwable,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.throwableOfThrowable(Throwable,T,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.throwableOfType(Throwable,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.throwableOfType(Throwable,T,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.typeErasure(Throwable)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(Throwable)</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ExceptionUtils.ExceptionUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.ContextedException()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.ContextedException(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.ContextedException(Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.ContextedException(String,Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.ContextedException(String,Throwable,ExceptionContext)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.addContextValue(String,Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.setContextValue(String,Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.getContextValues(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.getFirstContextValue(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.getContextEntries()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.getContextLabels()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.getMessage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.getRawMessage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedException.getFormattedExceptionMessage(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.ContextedRuntimeException()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.ContextedRuntimeException(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.ContextedRuntimeException(Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.ContextedRuntimeException(String,Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.ContextedRuntimeException(String,Throwable,ExceptionContext)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.addContextValue(String,Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.setContextValue(String,Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.getContextValues(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.getFirstContextValue(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.getContextEntries()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.getContextLabels()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.getMessage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.getRawMessage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.exception.ContextedRuntimeException.getFormattedExceptionMessage(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventUtils.addEventListener(Object,L,L)</name>
      <ncss>8</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventUtils.bindEventsToMethod(Object,String,Object,L,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.EventBindingInvocationHandler(Object,String,String[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.invoke(Object,Method,Object[])</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(Method)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.create(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.EventListenerSupport(L)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.EventListenerSupport(L,ClassLoader)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.EventListenerSupport()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.fire()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.addListener(L)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.addListener(L,boolean)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.getListenerCount()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.removeListener(L)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.getListeners()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.writeObject(ObjectOutputStream)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.readObject(ObjectInputStream)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.initializeTransientFields(L,ClassLoader)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.createProxy(L,ClassLoader)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.createInvocationHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.event.EventListenerSupport.ProxyInvocationHandler.invoke(Object,Method,Object[])</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.asEnum(E)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.checkBitVectorable(E)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.generateBitVector(E,E)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.generateBitVector(E,E)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.generateBitVectors(E,E)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.generateBitVectors(E,E)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.getEnum(E,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.getEnum(E,String,E)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.getEnumIgnoreCase(E,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.getEnumIgnoreCase(E,String,E)</name>
      <ncss>7</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.getEnumList(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.getEnumMap(E)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.isValidEnum(E,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.isValidEnumIgnoreCase(E,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.processBitVector(E,long)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.processBitVectors(E,long)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.EnumUtils.EnumUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSetUtils.containsAny(String,String)</name>
      <ncss>8</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSetUtils.count(String,String)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSetUtils.deepEmpty(String[])</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSetUtils.delete(String,String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSetUtils.keep(String,String)</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSetUtils.modify(String,String[],boolean)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSetUtils.squeeze(String,String)</name>
      <ncss>25</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.apache.commons.lang3.CharSetUtils.CharSetUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function_averages>
      <ncss>4.79</ncss>
      <ccn>2.69</ccn>
      <javadocs>0.91</javadocs>
    </function_averages>
    <ncss>12,751.00</ncss>
  </functions>
</javancss>
