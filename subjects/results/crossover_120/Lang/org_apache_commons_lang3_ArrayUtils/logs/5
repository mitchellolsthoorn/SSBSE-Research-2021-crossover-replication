* EvoSuite 1.1.0
* Configuration: crossover_120
* Going to generate test cases for class: org.apache.commons.lang3.ArrayUtils
* Starting Client-0
* Connecting to master process on port 20226
* Analyzing classpath: 
  - projects/Lang/commons-lang3-3.12.0.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.ArrayUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 8739
* Using seed 3644804689
* Starting evolution
* Initial Number of Goals in DynaMOSA = 2360 / 8739
[MASTER] 15:09:02.104 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 15:09:02.104 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 15:09:11.856 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 125s and 69 generations, 85495 statements, best individual has fitness: 1180.0
[MASTER] 15:11:23.615 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 22 seconds more than allowed.
* Minimizing test suite
[MASTER] 15:13:27.989 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 2107
* Number of covered goals: 1992
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 1640
* Number of covered goals: 1498
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 61
* Number of covered goals: 61
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 1654
* Number of covered goals: 1351
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 982
* Number of covered goals: 677
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 358
* Number of covered goals: 358
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 358
* Number of covered goals: 353
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 1640
* Number of covered goals: 1381
* Generated 1168 tests with total length 21076
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:16:05.406 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7564666666666666% of time used, but only 76/1168 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 15:17:03.189 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_491_1619795823164/org/apache/commons/lang3/ArrayUtils_491_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_491_1619795823164/org/apache/commons/lang3/ArrayUtils_491_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:03.189 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:03.189 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:03.195 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 57
[MASTER] 15:17:03.195 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_491_1619795823164/org/apache/commons/lang3/ArrayUtils_491_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:03.195 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:03.196 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_491_1619795823164/org/apache/commons/lang3/ArrayUtils_491_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:03 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.lang.reflect.Array;
12: import java.util.AbstractMap;
13: import java.util.BitSet;
14: import java.util.Comparator;
15: import java.util.Map;
16: import org.apache.commons.lang3.ArrayUtils;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class ArrayUtils_491_tmp__ESTest extends ArrayUtils_491_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       char[] charArray0 = new char[3];
28:       charArray0[0] = 'F';
29:       charArray0[1] = 'f';
30:       charArray0[2] = 'Z';
31:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
32:       assertEquals(3, charArray0.length);
33:       assertEquals(3, characterArray0.length);
34:       assertNotNull(characterArray0);
35:       assertArrayEquals(new char[] {'F', 'f', 'Z'}, charArray0);
36:       
37:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
38:       assertEquals(3, charArray0.length);
39:       assertEquals(3, characterArray0.length);
40:       assertEquals(3, stringArray0.length);
41:       assertNotNull(stringArray0);
42:       assertArrayEquals(new char[] {'F', 'f', 'Z'}, charArray0);
43:       
44:       AbstractMap.SimpleEntry<Object, Object>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Object, Object>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 4);
45:       Integer integer0 = new Integer(0);
46:       assertEquals(0, (int)integer0);
47:       assertNotNull(integer0);
48:       
49:       Float float0 = new Float(29.0F);
50:       assertEquals(29.0F, (float)float0, 0.01F);
51:       assertNotNull(float0);
52:       
53:       AbstractMap.SimpleImmutableEntry<Integer, Float> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Float>(integer0, float0);
54:       assertNotNull(abstractMap_SimpleImmutableEntry0);
55:       
56:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
57:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
58:       assertNotNull(comparator1);
59:       
60:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
61:       assertNotNull(abstractMap_SimpleEntry0);
62:       
63:       abstractMap_SimpleEntryArray0[0] = abstractMap_SimpleEntry0;
64:       Float float1 = new Float(29.0F);
65:       assertEquals(29.0F, (float)float1, 0.01F);
66:       assertEquals((float)float1, (float)float0, 0.01F);
67:       assertNotNull(float1);
68:       
69:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, Object>(float1, "");
70:       assertEquals((float)float1, (float)float0, 0.01F);
71:       assertFalse(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry0));
72:       assertNotNull(abstractMap_SimpleEntry1);
73:       
74:       double[] doubleArray0 = new double[9];
75:       doubleArray0[0] = (double) 0;
76:       doubleArray0[1] = (double) 'F';
77:       doubleArray0[2] = (double) 'F';
78:       doubleArray0[3] = (double) 'f';
79:       doubleArray0[5] = (double) 'f';
80:       doubleArray0[6] = (double) 29.0F;
81:       doubleArray0[7] = (double) 'f';
82:       doubleArray0[8] = (double) 'Z';
83:       BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 29.0F, 0);
84:       assertEquals(1, bitSet0.cardinality());
85:       assertFalse(bitSet0.isEmpty());
86:       assertEquals("{6}", bitSet0.toString());
87:       assertEquals(7, bitSet0.length());
88:       assertEquals(64, bitSet0.size());
89:       assertEquals(9, doubleArray0.length);
90:       assertNotNull(bitSet0);
91:       assertArrayEquals(new double[] {0.0, 70.0, 70.0, 102.0, 0.0, 102.0, 29.0, 102.0, 90.0}, doubleArray0, 0.01);
92:       
93:       int int0 = ArrayUtils.lastIndexOf(doubleArray0, 90.0, (double) 0);
94:       assertEquals(8, int0);
95:       assertEquals(9, doubleArray0.length);
96:       assertArrayEquals(new double[] {0.0, 70.0, 70.0, 102.0, 0.0, 102.0, 29.0, 102.0, 90.0}, doubleArray0, 0.01);
97:   }
98: }
RegularFileObject[/tmp/EvoSuite_491_1619795823164/org/apache/commons/lang3/ArrayUtils_491_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:03 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_491_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_491_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_491_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_491_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:03.197 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[3];
charArray0[0] = 'F';
charArray0[1] = 'f';
charArray0[2] = 'Z';
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'F', 'f', 'Z'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertEquals(3, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'F', 'f', 'Z'}, charArray0);

AbstractMap.SimpleEntry<Object, Object>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Object, Object>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 4);
Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

Float float0 = new Float(29.0F);
assertEquals(29.0F, (float)float0, 0.01F);
assertNotNull(float0);

AbstractMap.SimpleImmutableEntry<Integer, Float> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Float>(integer0, float0);
assertNotNull(abstractMap_SimpleImmutableEntry0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
assertNotNull(abstractMap_SimpleEntry0);

abstractMap_SimpleEntryArray0[0] = abstractMap_SimpleEntry0;
Float float1 = new Float(29.0F);
assertEquals(29.0F, (float)float1, 0.01F);
assertEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, Object>(float1, "");
assertEquals((float)float1, (float)float0, 0.01F);
assertFalse(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry0));
assertNotNull(abstractMap_SimpleEntry1);

double[] doubleArray0 = new double[9];
doubleArray0[0] = (double) 0;
doubleArray0[1] = (double) 'F';
doubleArray0[2] = (double) 'F';
doubleArray0[3] = (double) 'f';
doubleArray0[5] = (double) 'f';
doubleArray0[6] = (double) 29.0F;
doubleArray0[7] = (double) 'f';
doubleArray0[8] = (double) 'Z';
BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 29.0F, 0);
assertEquals(1, bitSet0.cardinality());
assertFalse(bitSet0.isEmpty());
assertEquals("{6}", bitSet0.toString());
assertEquals(7, bitSet0.length());
assertEquals(64, bitSet0.size());
assertEquals(9, doubleArray0.length);
assertNotNull(bitSet0);
assertArrayEquals(new double[] {0.0, 70.0, 70.0, 102.0, 0.0, 102.0, 29.0, 102.0, 90.0}, doubleArray0, 0.01);

int int0 = ArrayUtils.lastIndexOf(doubleArray0, 90.0, (double) 0);
assertEquals(8, int0);
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 70.0, 70.0, 102.0, 0.0, 102.0, 29.0, 102.0, 90.0}, doubleArray0, 0.01);


[MASTER] 15:17:03.303 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_495_1619795823277/org/apache/commons/lang3/ArrayUtils_495_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_495_1619795823277/org/apache/commons/lang3/ArrayUtils_495_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:03.303 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:03.303 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:03.304 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 58
[MASTER] 15:17:03.304 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_495_1619795823277/org/apache/commons/lang3/ArrayUtils_495_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:03.304 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:03.304 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_495_1619795823277/org/apache/commons/lang3/ArrayUtils_495_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:03 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.BitSet;
13: import java.util.Comparator;
14: import java.util.Map;
15: import org.apache.commons.lang3.ArrayUtils;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class ArrayUtils_495_tmp__ESTest extends ArrayUtils_495_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       char[] charArray0 = new char[1];
27:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
28:       assertEquals(1, charArray0.length);
29:       assertEquals(1, characterArray0.length);
30:       assertNotNull(characterArray0);
31:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
32:       
33:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
34:       assertEquals(1, charArray0.length);
35:       assertEquals(1, characterArray0.length);
36:       assertEquals(1, stringArray0.length);
37:       assertNotNull(stringArray0);
38:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
39:       
40:       Integer integer0 = new Integer(37);
41:       assertEquals(37, (int)integer0);
42:       assertNotNull(integer0);
43:       
44:       Float float0 = new Float(2531.9F);
45:       assertEquals(2531.9F, (float)float0, 0.01F);
46:       assertNotNull(float0);
47:       
48:       Float float1 = new Float(Float.NaN);
49:       assertEquals(Float.NaN, (float)float1, 0.01F);
50:       assertNotEquals((float)float1, (float)float0, 0.01F);
51:       assertNotNull(float1);
52:       
53:       AbstractMap.SimpleImmutableEntry<Integer, Float> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Float>(integer0, float1);
54:       assertNotEquals((float)float1, (float)float0, 0.01F);
55:       assertNotNull(abstractMap_SimpleImmutableEntry0);
56:       
57:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
58:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
59:       assertNotNull(comparator1);
60:       
61:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
62:       assertNotEquals((float)float1, (float)float0, 0.01F);
63:       assertNotNull(abstractMap_SimpleEntry0);
64:       
65:       Float float2 = new Float((-2294.6277F));
66:       assertEquals((-2294.6277F), (float)float2, 0.01F);
67:       assertNotEquals((float)float2, (float)float1, 0.01F);
68:       assertNotEquals((float)float2, (float)float0, 0.01F);
69:       assertNotNull(float2);
70:       
71:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, Object>(comparator1, abstractMap_SimpleImmutableEntry0);
72:       assertNotEquals((float)float1, (float)float0, 0.01F);
73:       assertNotEquals((float)float1, (float)float2, 0.01F);
74:       assertFalse(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry0));
75:       assertNotNull(abstractMap_SimpleEntry1);
76:       
77:       double[] doubleArray0 = new double[8];
78:       doubleArray0[0] = (double) '(';
79:       doubleArray0[1] = (double) '(';
80:       doubleArray0[2] = 2229.2209853282297;
81:       doubleArray0[3] = (double) (-2294.6277F);
82:       doubleArray0[4] = (double) 2531.9F;
83:       doubleArray0[5] = (double) (-2294.6277F);
84:       doubleArray0[6] = (double) '(';
85:       doubleArray0[7] = (double) (-2294.6277F);
86:       BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, 58.0, 3350);
87:       assertEquals(0, bitSet0.length());
88:       assertEquals(0, bitSet0.cardinality());
89:       assertEquals("{}", bitSet0.toString());
90:       assertEquals(64, bitSet0.size());
91:       assertTrue(bitSet0.isEmpty());
92:       assertEquals(8, doubleArray0.length);
93:       assertNotNull(bitSet0);
94:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, (-2294.627685546875), 40.0, (-2294.627685546875)}, doubleArray0, 0.01);
95:       
96:       int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297, 1076.0);
97:       assertEquals(4, int0);
98:       assertEquals(8, doubleArray0.length);
99:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, (-2294.627685546875), 40.0, (-2294.627685546875)}, doubleArray0, 0.01);
100:   }
101: }
RegularFileObject[/tmp/EvoSuite_495_1619795823277/org/apache/commons/lang3/ArrayUtils_495_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:03 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_495_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_495_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_495_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_495_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:03.305 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[1];
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertEquals(1, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

Integer integer0 = new Integer(37);
assertEquals(37, (int)integer0);
assertNotNull(integer0);

Float float0 = new Float(2531.9F);
assertEquals(2531.9F, (float)float0, 0.01F);
assertNotNull(float0);

Float float1 = new Float(Float.NaN);
assertEquals(Float.NaN, (float)float1, 0.01F);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

AbstractMap.SimpleImmutableEntry<Integer, Float> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Float>(integer0, float1);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(abstractMap_SimpleImmutableEntry0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(abstractMap_SimpleEntry0);

Float float2 = new Float((-2294.6277F));
assertEquals((-2294.6277F), (float)float2, 0.01F);
assertNotEquals((float)float2, (float)float1, 0.01F);
assertNotEquals((float)float2, (float)float0, 0.01F);
assertNotNull(float2);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, Object>(comparator1, abstractMap_SimpleImmutableEntry0);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotEquals((float)float1, (float)float2, 0.01F);
assertFalse(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry0));
assertNotNull(abstractMap_SimpleEntry1);

double[] doubleArray0 = new double[8];
doubleArray0[0] = (double) '(';
doubleArray0[1] = (double) '(';
doubleArray0[2] = 2229.2209853282297;
doubleArray0[3] = (double) (-2294.6277F);
doubleArray0[4] = (double) 2531.9F;
doubleArray0[5] = (double) (-2294.6277F);
doubleArray0[6] = (double) '(';
doubleArray0[7] = (double) (-2294.6277F);
BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, 58.0, 3350);
assertEquals(0, bitSet0.length());
assertEquals(0, bitSet0.cardinality());
assertEquals("{}", bitSet0.toString());
assertEquals(64, bitSet0.size());
assertTrue(bitSet0.isEmpty());
assertEquals(8, doubleArray0.length);
assertNotNull(bitSet0);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, (-2294.627685546875), 40.0, (-2294.627685546875)}, doubleArray0, 0.01);

int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297, 1076.0);
assertEquals(4, int0);
assertEquals(8, doubleArray0.length);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, (-2294.627685546875), 40.0, (-2294.627685546875)}, doubleArray0, 0.01);


[MASTER] 15:17:05.547 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_543_1619795825502/org/apache/commons/lang3/ArrayUtils_543_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_543_1619795825502/org/apache/commons/lang3/ArrayUtils_543_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:05.547 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:05.547 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:05.548 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 55
[MASTER] 15:17:05.548 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_543_1619795825502/org/apache/commons/lang3/ArrayUtils_543_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:05.548 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:05.548 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_543_1619795825502/org/apache/commons/lang3/ArrayUtils_543_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:05 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.lang.reflect.Array;
12: import java.util.AbstractMap;
13: import java.util.BitSet;
14: import java.util.Comparator;
15: import java.util.Map;
16: import java.util.Random;
17: import org.apache.commons.lang3.ArrayUtils;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.evosuite.runtime.ViolatedAssumptionAnswer;
21: import org.evosuite.runtime.mock.java.util.MockRandom;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class ArrayUtils_543_tmp__ESTest extends ArrayUtils_543_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       char[] charArray0 = new char[3];
30:       charArray0[1] = 'f';
31:       charArray0[2] = 'Z';
32:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
33:       assertEquals(3, charArray0.length);
34:       assertEquals(3, characterArray0.length);
35:       assertNotNull(characterArray0);
36:       assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);
37:       
38:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
39:       assertEquals(3, charArray0.length);
40:       assertEquals(3, characterArray0.length);
41:       assertEquals(3, stringArray0.length);
42:       assertNotNull(stringArray0);
43:       assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);
44:       
45:       AbstractMap.SimpleEntry<Object, Object>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Object, Object>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 4);
46:       Integer integer0 = new Integer(0);
47:       assertEquals(0, (int)integer0);
48:       assertNotNull(integer0);
49:       
50:       Float float0 = new Float(29.0F);
51:       assertEquals(29.0F, (float)float0, 0.01F);
52:       assertNotNull(float0);
53:       
54:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
55:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
56:       assertNotNull(comparator1);
57:       
58:       Float float1 = new Float(29.0F);
59:       assertEquals(29.0F, (float)float1, 0.01F);
60:       assertEquals((float)float1, (float)float0, 0.01F);
61:       assertNotNull(float1);
62:       
63:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(float1, "");
64:       assertEquals((float)float1, (float)float0, 0.01F);
65:       assertNotNull(abstractMap_SimpleEntry0);
66:       
67:       double[] doubleArray0 = new double[9];
68:       doubleArray0[0] = (double) 0;
69:       doubleArray0[1] = (double) 'F';
70:       doubleArray0[2] = (double) '\u0000';
71:       doubleArray0[3] = (double) 'f';
72:       doubleArray0[5] = (double) 'f';
73:       doubleArray0[6] = (double) 29.0F;
74:       doubleArray0[7] = (double) 'f';
75:       doubleArray0[8] = (double) 'Z';
76:       BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 29.0F, 0);
77:       assertEquals("{6}", bitSet0.toString());
78:       assertEquals(1, bitSet0.cardinality());
79:       assertFalse(bitSet0.isEmpty());
80:       assertEquals(7, bitSet0.length());
81:       assertEquals(64, bitSet0.size());
82:       assertEquals(9, doubleArray0.length);
83:       assertNotNull(bitSet0);
84:       assertArrayEquals(new double[] {0.0, 70.0, 0.0, 102.0, 0.0, 102.0, 29.0, 102.0, 90.0}, doubleArray0, 0.01);
85:       
86:       int int0 = ArrayUtils.lastIndexOf(doubleArray0, 90.0, (double) 0);
87:       assertEquals(8, int0);
88:       assertEquals(9, doubleArray0.length);
89:       assertArrayEquals(new double[] {0.0, 70.0, 0.0, 102.0, 0.0, 102.0, 29.0, 102.0, 90.0}, doubleArray0, 0.01);
90:       
91:       MockRandom mockRandom0 = new MockRandom(0);
92:       assertNotNull(mockRandom0);
93:       
94:       ArrayUtils.shuffle((Object[]) characterArray0, (Random) mockRandom0);
95:       assertEquals(3, charArray0.length);
96:       assertEquals(3, characterArray0.length);
97:       assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);
98:       
99:       ArrayUtils.reverse((Object[]) stringArray0, 8, 812);
100:       assertEquals(3, charArray0.length);
101:       assertEquals(3, characterArray0.length);
102:       assertEquals(3, stringArray0.length);
103:       assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);
104:   }
105: }
RegularFileObject[/tmp/EvoSuite_543_1619795825502/org/apache/commons/lang3/ArrayUtils_543_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:05 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_543_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_543_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_543_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_543_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:05.550 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[3];
charArray0[1] = 'f';
charArray0[2] = 'Z';
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertEquals(3, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);

AbstractMap.SimpleEntry<Object, Object>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Object, Object>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 4);
Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

Float float0 = new Float(29.0F);
assertEquals(29.0F, (float)float0, 0.01F);
assertNotNull(float0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float1 = new Float(29.0F);
assertEquals(29.0F, (float)float1, 0.01F);
assertEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(float1, "");
assertEquals((float)float1, (float)float0, 0.01F);
assertNotNull(abstractMap_SimpleEntry0);

double[] doubleArray0 = new double[9];
doubleArray0[0] = (double) 0;
doubleArray0[1] = (double) 'F';
doubleArray0[2] = (double) '\u0000';
doubleArray0[3] = (double) 'f';
doubleArray0[5] = (double) 'f';
doubleArray0[6] = (double) 29.0F;
doubleArray0[7] = (double) 'f';
doubleArray0[8] = (double) 'Z';
BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 29.0F, 0);
assertEquals("{6}", bitSet0.toString());
assertEquals(1, bitSet0.cardinality());
assertFalse(bitSet0.isEmpty());
assertEquals(7, bitSet0.length());
assertEquals(64, bitSet0.size());
assertEquals(9, doubleArray0.length);
assertNotNull(bitSet0);
assertArrayEquals(new double[] {0.0, 70.0, 0.0, 102.0, 0.0, 102.0, 29.0, 102.0, 90.0}, doubleArray0, 0.01);

int int0 = ArrayUtils.lastIndexOf(doubleArray0, 90.0, (double) 0);
assertEquals(8, int0);
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 70.0, 0.0, 102.0, 0.0, 102.0, 29.0, 102.0, 90.0}, doubleArray0, 0.01);

MockRandom mockRandom0 = new MockRandom(0);
assertNotNull(mockRandom0);

ArrayUtils.shuffle((Object[]) characterArray0, (Random) mockRandom0);
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);

ArrayUtils.reverse((Object[]) stringArray0, 8, 812);
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertEquals(3, stringArray0.length);
assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);


[MASTER] 15:17:07.519 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_590_1619795827481/org/apache/commons/lang3/ArrayUtils_590_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_590_1619795827481/org/apache/commons/lang3/ArrayUtils_590_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:07.519 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:07.519 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:07.520 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 56
[MASTER] 15:17:07.520 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_590_1619795827481/org/apache/commons/lang3/ArrayUtils_590_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:07.520 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:07.520 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_590_1619795827481/org/apache/commons/lang3/ArrayUtils_590_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:07 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.BitSet;
13: import java.util.Comparator;
14: import java.util.Locale;
15: import java.util.Map;
16: import org.apache.commons.lang3.ArrayUtils;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class ArrayUtils_590_tmp__ESTest extends ArrayUtils_590_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       char[] charArray0 = new char[1];
28:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
29:       assertEquals(1, charArray0.length);
30:       assertEquals(1, characterArray0.length);
31:       assertNotNull(characterArray0);
32:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
33:       
34:       String[] stringArray0 = Locale.getISOLanguages();
35:       assertEquals(188, stringArray0.length);
36:       assertNotNull(stringArray0);
37:       
38:       Integer integer0 = new Integer(0);
39:       assertEquals(0, (int)integer0);
40:       assertNotNull(integer0);
41:       
42:       Float float0 = new Float(2531.9F);
43:       assertEquals(2531.9F, (float)float0, 0.01F);
44:       assertNotNull(float0);
45:       
46:       Float float1 = new Float(Float.NaN);
47:       assertEquals(Float.NaN, (float)float1, 0.01F);
48:       assertNotEquals((float)float1, (float)float0, 0.01F);
49:       assertNotNull(float1);
50:       
51:       AbstractMap.SimpleImmutableEntry<Integer, Float> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Float>(integer0, float1);
52:       assertNotEquals((float)float1, (float)float0, 0.01F);
53:       assertNotNull(abstractMap_SimpleImmutableEntry0);
54:       
55:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
56:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
57:       assertNotNull(comparator1);
58:       
59:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
60:       assertNotEquals((float)float1, (float)float0, 0.01F);
61:       assertNotNull(abstractMap_SimpleEntry0);
62:       
63:       Float float2 = new Float((-2294.6277F));
64:       assertEquals((-2294.6277F), (float)float2, 0.01F);
65:       assertNotEquals((float)float2, (float)float1, 0.01F);
66:       assertNotEquals((float)float2, (float)float0, 0.01F);
67:       assertNotNull(float2);
68:       
69:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, Object>(comparator1, abstractMap_SimpleImmutableEntry0);
70:       assertNotEquals((float)float1, (float)float2, 0.01F);
71:       assertNotEquals((float)float1, (float)float0, 0.01F);
72:       assertFalse(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry0));
73:       assertNotNull(abstractMap_SimpleEntry1);
74:       
75:       double[] doubleArray0 = new double[8];
76:       doubleArray0[0] = (double) '(';
77:       doubleArray0[1] = (double) '(';
78:       doubleArray0[2] = 2229.2209853282297;
79:       doubleArray0[3] = (double) (-2294.6277F);
80:       doubleArray0[4] = (double) 2531.9F;
81:       doubleArray0[5] = (double) (-2294.6277F);
82:       doubleArray0[6] = (double) '(';
83:       doubleArray0[7] = (double) (-2294.6277F);
84:       BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, 58.0, 3350);
85:       assertEquals(64, bitSet0.size());
86:       assertEquals(0, bitSet0.cardinality());
87:       assertTrue(bitSet0.isEmpty());
88:       assertEquals("{}", bitSet0.toString());
89:       assertEquals(0, bitSet0.length());
90:       assertEquals(8, doubleArray0.length);
91:       assertNotNull(bitSet0);
92:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, (-2294.627685546875), 40.0, (-2294.627685546875)}, doubleArray0, 0.01);
93:       
94:       int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297, 1076.0);
95:       assertEquals(4, int0);
96:       assertEquals(8, doubleArray0.length);
97:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, (-2294.627685546875), 40.0, (-2294.627685546875)}, doubleArray0, 0.01);
98:       
99:       long[] longArray0 = new long[9];
100:       longArray0[0] = (long) 3350;
101:       longArray0[1] = (long) 0;
102:       longArray0[2] = (long) 4;
103:       longArray0[3] = (long) 0;
104:       longArray0[4] = (long) 4;
105:       longArray0[5] = (long) 3350;
106:       longArray0[6] = (long) 3350;
107:       longArray0[7] = (long) 0;
108:       longArray0[8] = (long) '(';
109:       long[] longArray1 = ArrayUtils.removeAllOccurrences(longArray0, (-3165L));
110:       assertEquals(9, longArray1.length);
111:       assertEquals(9, longArray0.length);
112:       assertFalse(longArray1.equals((Object)longArray0));
113:       assertNotNull(longArray1);
114:       assertArrayEquals(new long[] {3350L, 0L, 4L, 0L, 4L, 3350L, 3350L, 0L, 40L}, longArray1);
115:       assertArrayEquals(new long[] {3350L, 0L, 4L, 0L, 4L, 3350L, 3350L, 0L, 40L}, longArray0);
116:       assertNotSame(longArray1, longArray0);
117:       assertNotSame(longArray0, longArray1);
118:   }
119: }
RegularFileObject[/tmp/EvoSuite_590_1619795827481/org/apache/commons/lang3/ArrayUtils_590_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:07 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_590_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_590_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_590_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_590_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:07.521 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[1];
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

String[] stringArray0 = Locale.getISOLanguages();
assertEquals(188, stringArray0.length);
assertNotNull(stringArray0);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

Float float0 = new Float(2531.9F);
assertEquals(2531.9F, (float)float0, 0.01F);
assertNotNull(float0);

Float float1 = new Float(Float.NaN);
assertEquals(Float.NaN, (float)float1, 0.01F);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

AbstractMap.SimpleImmutableEntry<Integer, Float> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Float>(integer0, float1);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(abstractMap_SimpleImmutableEntry0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(abstractMap_SimpleEntry0);

Float float2 = new Float((-2294.6277F));
assertEquals((-2294.6277F), (float)float2, 0.01F);
assertNotEquals((float)float2, (float)float1, 0.01F);
assertNotEquals((float)float2, (float)float0, 0.01F);
assertNotNull(float2);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, Object>(comparator1, abstractMap_SimpleImmutableEntry0);
assertNotEquals((float)float1, (float)float2, 0.01F);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertFalse(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry0));
assertNotNull(abstractMap_SimpleEntry1);

double[] doubleArray0 = new double[8];
doubleArray0[0] = (double) '(';
doubleArray0[1] = (double) '(';
doubleArray0[2] = 2229.2209853282297;
doubleArray0[3] = (double) (-2294.6277F);
doubleArray0[4] = (double) 2531.9F;
doubleArray0[5] = (double) (-2294.6277F);
doubleArray0[6] = (double) '(';
doubleArray0[7] = (double) (-2294.6277F);
BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, 58.0, 3350);
assertEquals(64, bitSet0.size());
assertEquals(0, bitSet0.cardinality());
assertTrue(bitSet0.isEmpty());
assertEquals("{}", bitSet0.toString());
assertEquals(0, bitSet0.length());
assertEquals(8, doubleArray0.length);
assertNotNull(bitSet0);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, (-2294.627685546875), 40.0, (-2294.627685546875)}, doubleArray0, 0.01);

int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297, 1076.0);
assertEquals(4, int0);
assertEquals(8, doubleArray0.length);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, (-2294.627685546875), 40.0, (-2294.627685546875)}, doubleArray0, 0.01);

long[] longArray0 = new long[9];
longArray0[0] = (long) 3350;
longArray0[1] = (long) 0;
longArray0[2] = (long) 4;
longArray0[3] = (long) 0;
longArray0[4] = (long) 4;
longArray0[5] = (long) 3350;
longArray0[6] = (long) 3350;
longArray0[7] = (long) 0;
longArray0[8] = (long) '(';
long[] longArray1 = ArrayUtils.removeAllOccurrences(longArray0, (-3165L));
assertEquals(9, longArray1.length);
assertEquals(9, longArray0.length);
assertFalse(longArray1.equals((Object)longArray0));
assertNotNull(longArray1);
assertArrayEquals(new long[] {3350L, 0L, 4L, 0L, 4L, 3350L, 3350L, 0L, 40L}, longArray1);
assertArrayEquals(new long[] {3350L, 0L, 4L, 0L, 4L, 3350L, 3350L, 0L, 40L}, longArray0);
assertNotSame(longArray1, longArray0);
assertNotSame(longArray0, longArray1);


[MASTER] 15:17:11.782 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_681_1619795831543/org/apache/commons/lang3/ArrayUtils_681_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_681_1619795831543/org/apache/commons/lang3/ArrayUtils_681_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:11.784 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:11.785 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:11.786 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 45
[MASTER] 15:17:11.786 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_681_1619795831543/org/apache/commons/lang3/ArrayUtils_681_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:11.787 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:11.788 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_681_1619795831543/org/apache/commons/lang3/ArrayUtils_681_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:11 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.Comparator;
12: import java.util.Map;
13: import org.apache.commons.lang3.ArrayUtils;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class ArrayUtils_681_tmp__ESTest extends ArrayUtils_681_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       char[] charArray0 = new char[1];
25:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
26:       assertEquals(1, charArray0.length);
27:       assertEquals(1, characterArray0.length);
28:       assertNotNull(characterArray0);
29:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
30:       
31:       String[] stringArray0 = ArrayUtils.EMPTY_STRING_ARRAY;
32:       assertEquals(0, stringArray0.length);
33:       assertNotNull(stringArray0);
34:       
35:       Float float0 = new Float(2531.9F);
36:       assertEquals(2531.9F, (float)float0, 0.01F);
37:       assertNotNull(float0);
38:       
39:       Float float1 = new Float(Float.NaN);
40:       assertEquals(Float.NaN, (float)float1, 0.01F);
41:       assertNotEquals((float)float1, (float)float0, 0.01F);
42:       assertNotNull(float1);
43:       
44:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
45:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
46:       assertNotNull(comparator1);
47:       
48:       Float float2 = new Float((-2294.6277F));
49:       assertEquals((-2294.6277F), (float)float2, 0.01F);
50:       assertNotEquals((float)float2, (float)float1, 0.01F);
51:       assertNotEquals((float)float2, (float)float0, 0.01F);
52:       assertNotNull(float2);
53:       
54:       ArrayUtils.shift(charArray0, 134, 134, 134);
55:       assertEquals(1, charArray0.length);
56:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
57:       
58:       byte[] byteArray0 = new byte[3];
59:       byteArray0[0] = (byte) (-28);
60:       byteArray0[1] = (byte)91;
61:       byteArray0[2] = (byte)82;
62:       ArrayUtils.shift(byteArray0, 756, 45, (int) (byte)91);
63:       assertEquals(3, byteArray0.length);
64:       assertArrayEquals(new byte[] {(byte) (-28), (byte)91, (byte)82}, byteArray0);
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_681_1619795831543/org/apache/commons/lang3/ArrayUtils_681_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:11 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_681_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_681_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_681_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_681_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:11.788 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[1];
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

String[] stringArray0 = ArrayUtils.EMPTY_STRING_ARRAY;
assertEquals(0, stringArray0.length);
assertNotNull(stringArray0);

Float float0 = new Float(2531.9F);
assertEquals(2531.9F, (float)float0, 0.01F);
assertNotNull(float0);

Float float1 = new Float(Float.NaN);
assertEquals(Float.NaN, (float)float1, 0.01F);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float2 = new Float((-2294.6277F));
assertEquals((-2294.6277F), (float)float2, 0.01F);
assertNotEquals((float)float2, (float)float1, 0.01F);
assertNotEquals((float)float2, (float)float0, 0.01F);
assertNotNull(float2);

ArrayUtils.shift(charArray0, 134, 134, 134);
assertEquals(1, charArray0.length);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte) (-28);
byteArray0[1] = (byte)91;
byteArray0[2] = (byte)82;
ArrayUtils.shift(byteArray0, 756, 45, (int) (byte)91);
assertEquals(3, byteArray0.length);
assertArrayEquals(new byte[] {(byte) (-28), (byte)91, (byte)82}, byteArray0);


[MASTER] 15:17:13.612 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_728_1619795833582/org/apache/commons/lang3/ArrayUtils_728_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_728_1619795833582/org/apache/commons/lang3/ArrayUtils_728_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:13.612 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:13.612 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:13.613 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 49
[MASTER] 15:17:13.613 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_728_1619795833582/org/apache/commons/lang3/ArrayUtils_728_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:13.613 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:13.613 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_728_1619795833582/org/apache/commons/lang3/ArrayUtils_728_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:13 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.BitSet;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.lang3.ArrayUtils;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class ArrayUtils_728_tmp__ESTest extends ArrayUtils_728_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       char[] charArray0 = new char[1];
26:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
27:       assertEquals(1, charArray0.length);
28:       assertEquals(1, characterArray0.length);
29:       assertNotNull(characterArray0);
30:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
31:       
32:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
33:       assertEquals(1, charArray0.length);
34:       assertEquals(1, characterArray0.length);
35:       assertEquals(1, stringArray0.length);
36:       assertNotNull(stringArray0);
37:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
38:       
39:       Float float0 = new Float(2531.9F);
40:       assertEquals(2531.9F, (float)float0, 0.01F);
41:       assertNotNull(float0);
42:       
43:       Float float1 = new Float(Float.NaN);
44:       assertEquals(Float.NaN, (float)float1, 0.01F);
45:       assertNotEquals((float)float1, (float)float0, 0.01F);
46:       assertNotNull(float1);
47:       
48:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
49:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
50:       assertNotNull(comparator1);
51:       
52:       Float float2 = new Float((-2294.6277F));
53:       assertEquals((-2294.6277F), (float)float2, 0.01F);
54:       assertNotEquals((float)float2, (float)float0, 0.01F);
55:       assertNotEquals((float)float2, (float)float1, 0.01F);
56:       assertNotNull(float2);
57:       
58:       double[] doubleArray0 = new double[8];
59:       doubleArray0[0] = (double) '(';
60:       doubleArray0[1] = (double) '(';
61:       doubleArray0[2] = 2229.2209853282297;
62:       doubleArray0[3] = (double) (-2294.6277F);
63:       doubleArray0[4] = (double) 2531.9F;
64:       int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297);
65:       assertEquals(2, int0);
66:       assertEquals(8, doubleArray0.length);
67:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
68:       
69:       float[] floatArray0 = ArrayUtils.removeElement((float[]) null, 2531.9F);
70:       assertNull(floatArray0);
71:       
72:       float[] floatArray1 = ArrayUtils.addFirst((float[]) null, (float) 2);
73:       assertEquals(1, floatArray1.length);
74:       assertNotNull(floatArray1);
75:       assertArrayEquals(new float[] {2.0F}, floatArray1, 0.01F);
76:       
77:       BitSet bitSet0 = ArrayUtils.indexesOf((float[]) null, Float.NaN, 37);
78:       assertEquals(0, bitSet0.length());
79:       assertEquals(0, bitSet0.cardinality());
80:       assertEquals("{}", bitSet0.toString());
81:       assertTrue(bitSet0.isEmpty());
82:       assertEquals(64, bitSet0.size());
83:       assertNotNull(bitSet0);
84:   }
85: }
RegularFileObject[/tmp/EvoSuite_728_1619795833582/org/apache/commons/lang3/ArrayUtils_728_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:13 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_728_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_728_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_728_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_728_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:13.614 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[1];
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertEquals(1, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

Float float0 = new Float(2531.9F);
assertEquals(2531.9F, (float)float0, 0.01F);
assertNotNull(float0);

Float float1 = new Float(Float.NaN);
assertEquals(Float.NaN, (float)float1, 0.01F);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float2 = new Float((-2294.6277F));
assertEquals((-2294.6277F), (float)float2, 0.01F);
assertNotEquals((float)float2, (float)float0, 0.01F);
assertNotEquals((float)float2, (float)float1, 0.01F);
assertNotNull(float2);

double[] doubleArray0 = new double[8];
doubleArray0[0] = (double) '(';
doubleArray0[1] = (double) '(';
doubleArray0[2] = 2229.2209853282297;
doubleArray0[3] = (double) (-2294.6277F);
doubleArray0[4] = (double) 2531.9F;
int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297);
assertEquals(2, int0);
assertEquals(8, doubleArray0.length);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

float[] floatArray0 = ArrayUtils.removeElement((float[]) null, 2531.9F);
assertNull(floatArray0);

float[] floatArray1 = ArrayUtils.addFirst((float[]) null, (float) 2);
assertEquals(1, floatArray1.length);
assertNotNull(floatArray1);
assertArrayEquals(new float[] {2.0F}, floatArray1, 0.01F);

BitSet bitSet0 = ArrayUtils.indexesOf((float[]) null, Float.NaN, 37);
assertEquals(0, bitSet0.length());
assertEquals(0, bitSet0.cardinality());
assertEquals("{}", bitSet0.toString());
assertTrue(bitSet0.isEmpty());
assertEquals(64, bitSet0.size());
assertNotNull(bitSet0);


[MASTER] 15:17:13.830 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_734_1619795833805/org/apache/commons/lang3/ArrayUtils_734_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_734_1619795833805/org/apache/commons/lang3/ArrayUtils_734_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:13.832 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:13.832 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:13.833 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 49
[MASTER] 15:17:13.833 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_734_1619795833805/org/apache/commons/lang3/ArrayUtils_734_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:13.833 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:13.834 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_734_1619795833805/org/apache/commons/lang3/ArrayUtils_734_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:13 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.BitSet;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.lang3.ArrayUtils;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class ArrayUtils_734_tmp__ESTest extends ArrayUtils_734_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       char[] charArray0 = new char[1];
26:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
27:       assertEquals(1, charArray0.length);
28:       assertEquals(1, characterArray0.length);
29:       assertNotNull(characterArray0);
30:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
31:       
32:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
33:       assertEquals(1, charArray0.length);
34:       assertEquals(1, characterArray0.length);
35:       assertEquals(1, stringArray0.length);
36:       assertNotNull(stringArray0);
37:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
38:       
39:       Float float0 = new Float(2531.9F);
40:       assertEquals(2531.9F, (float)float0, 0.01F);
41:       assertNotNull(float0);
42:       
43:       Float float1 = new Float(Float.NaN);
44:       assertEquals(Float.NaN, (float)float1, 0.01F);
45:       assertNotEquals((float)float1, (float)float0, 0.01F);
46:       assertNotNull(float1);
47:       
48:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
49:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
50:       assertNotNull(comparator1);
51:       
52:       double[] doubleArray0 = new double[8];
53:       doubleArray0[0] = (double) '(';
54:       doubleArray0[1] = (double) '(';
55:       doubleArray0[2] = 2229.2209853282297;
56:       doubleArray0[3] = (double) (-2294.6277F);
57:       doubleArray0[4] = (double) 2531.9F;
58:       int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297);
59:       assertEquals(2, int0);
60:       assertEquals(8, doubleArray0.length);
61:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
62:       
63:       float[] floatArray0 = ArrayUtils.addFirst((float[]) null, (float) 2);
64:       assertEquals(1, floatArray0.length);
65:       assertNotNull(floatArray0);
66:       assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);
67:       
68:       BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 37, (double) (-164.9F));
69:       assertTrue(bitSet0.isEmpty());
70:       assertEquals(0, bitSet0.cardinality());
71:       assertEquals(64, bitSet0.size());
72:       assertEquals("{}", bitSet0.toString());
73:       assertEquals(0, bitSet0.length());
74:       assertEquals(8, doubleArray0.length);
75:       assertNotNull(bitSet0);
76:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
77:       
78:       BitSet bitSet1 = ArrayUtils.indexesOf((Object[]) characterArray0, (Object) float0, 2);
79:       assertEquals(0, bitSet1.length());
80:       assertTrue(bitSet1.isEmpty());
81:       assertEquals("{}", bitSet1.toString());
82:       assertEquals(64, bitSet1.size());
83:       assertEquals(0, bitSet1.cardinality());
84:       assertEquals(1, charArray0.length);
85:       assertEquals(1, characterArray0.length);
86:       assertTrue(bitSet1.equals((Object)bitSet0));
87:       assertNotEquals((float)float0, (float)float1, 0.01F);
88:       assertNotNull(bitSet1);
89:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
90:       assertNotSame(bitSet1, bitSet0);
91:       
92:       ArrayUtils.swap(floatArray0, (-280), 706, 2);
93:       assertEquals(1, floatArray0.length);
94:       assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);
95:       
96:       ArrayUtils.shift(floatArray0, 10);
97:       assertEquals(1, floatArray0.length);
98:       assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);
99:   }
100: }
RegularFileObject[/tmp/EvoSuite_734_1619795833805/org/apache/commons/lang3/ArrayUtils_734_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:13 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_734_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_734_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_734_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_734_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:13.836 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[1];
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertEquals(1, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

Float float0 = new Float(2531.9F);
assertEquals(2531.9F, (float)float0, 0.01F);
assertNotNull(float0);

Float float1 = new Float(Float.NaN);
assertEquals(Float.NaN, (float)float1, 0.01F);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

double[] doubleArray0 = new double[8];
doubleArray0[0] = (double) '(';
doubleArray0[1] = (double) '(';
doubleArray0[2] = 2229.2209853282297;
doubleArray0[3] = (double) (-2294.6277F);
doubleArray0[4] = (double) 2531.9F;
int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297);
assertEquals(2, int0);
assertEquals(8, doubleArray0.length);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

float[] floatArray0 = ArrayUtils.addFirst((float[]) null, (float) 2);
assertEquals(1, floatArray0.length);
assertNotNull(floatArray0);
assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);

BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 37, (double) (-164.9F));
assertTrue(bitSet0.isEmpty());
assertEquals(0, bitSet0.cardinality());
assertEquals(64, bitSet0.size());
assertEquals("{}", bitSet0.toString());
assertEquals(0, bitSet0.length());
assertEquals(8, doubleArray0.length);
assertNotNull(bitSet0);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

BitSet bitSet1 = ArrayUtils.indexesOf((Object[]) characterArray0, (Object) float0, 2);
assertEquals(0, bitSet1.length());
assertTrue(bitSet1.isEmpty());
assertEquals("{}", bitSet1.toString());
assertEquals(64, bitSet1.size());
assertEquals(0, bitSet1.cardinality());
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertTrue(bitSet1.equals((Object)bitSet0));
assertNotEquals((float)float0, (float)float1, 0.01F);
assertNotNull(bitSet1);
assertArrayEquals(new char[] {'\u0000'}, charArray0);
assertNotSame(bitSet1, bitSet0);

ArrayUtils.swap(floatArray0, (-280), 706, 2);
assertEquals(1, floatArray0.length);
assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);

ArrayUtils.shift(floatArray0, 10);
assertEquals(1, floatArray0.length);
assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);


[MASTER] 15:17:14.854 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_763_1619795834815/org/apache/commons/lang3/ArrayUtils_763_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_763_1619795834815/org/apache/commons/lang3/ArrayUtils_763_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:14.854 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:14.854 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:14.854 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 49
[MASTER] 15:17:14.856 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_763_1619795834815/org/apache/commons/lang3/ArrayUtils_763_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:14.857 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:14.858 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_763_1619795834815/org/apache/commons/lang3/ArrayUtils_763_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:14 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.BitSet;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.lang3.ArrayUtils;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class ArrayUtils_763_tmp__ESTest extends ArrayUtils_763_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       char[] charArray0 = new char[1];
26:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
27:       assertEquals(1, charArray0.length);
28:       assertEquals(1, characterArray0.length);
29:       assertNotNull(characterArray0);
30:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
31:       
32:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
33:       assertEquals(1, charArray0.length);
34:       assertEquals(1, characterArray0.length);
35:       assertEquals(1, stringArray0.length);
36:       assertNotNull(stringArray0);
37:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
38:       
39:       Float float0 = new Float(2531.9F);
40:       assertEquals(2531.9F, (float)float0, 0.01F);
41:       assertNotNull(float0);
42:       
43:       Float float1 = new Float(Float.NaN);
44:       assertEquals(Float.NaN, (float)float1, 0.01F);
45:       assertNotEquals((float)float1, (float)float0, 0.01F);
46:       assertNotNull(float1);
47:       
48:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
49:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
50:       assertNotNull(comparator1);
51:       
52:       double[] doubleArray0 = new double[6];
53:       doubleArray0[0] = (double) '(';
54:       doubleArray0[1] = (double) '(';
55:       doubleArray0[2] = 2229.2209853282297;
56:       doubleArray0[3] = (double) (-2294.6277F);
57:       doubleArray0[4] = (double) 2531.9F;
58:       int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297);
59:       assertEquals(2, int0);
60:       assertEquals(6, doubleArray0.length);
61:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0}, doubleArray0, 0.01);
62:       
63:       float[] floatArray0 = ArrayUtils.addFirst((float[]) null, (float) 2);
64:       assertEquals(1, floatArray0.length);
65:       assertNotNull(floatArray0);
66:       assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);
67:       
68:       BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 37, (double) (-164.9F));
69:       assertEquals(64, bitSet0.size());
70:       assertEquals(0, bitSet0.cardinality());
71:       assertEquals("{}", bitSet0.toString());
72:       assertTrue(bitSet0.isEmpty());
73:       assertEquals(0, bitSet0.length());
74:       assertEquals(6, doubleArray0.length);
75:       assertNotNull(bitSet0);
76:       assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0}, doubleArray0, 0.01);
77:       
78:       BitSet bitSet1 = ArrayUtils.indexesOf((Object[]) characterArray0, (Object) float0, 2);
79:       assertTrue(bitSet1.isEmpty());
80:       assertEquals("{}", bitSet1.toString());
81:       assertEquals(0, bitSet1.cardinality());
82:       assertEquals(64, bitSet1.size());
83:       assertEquals(0, bitSet1.length());
84:       assertEquals(1, charArray0.length);
85:       assertEquals(1, characterArray0.length);
86:       assertTrue(bitSet1.equals((Object)bitSet0));
87:       assertNotEquals((float)float0, (float)float1, 0.01F);
88:       assertNotNull(bitSet1);
89:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
90:       assertNotSame(bitSet1, bitSet0);
91:       
92:       ArrayUtils.swap(floatArray0, (-280), 706, 2);
93:       assertEquals(1, floatArray0.length);
94:       assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);
95:       
96:       ArrayUtils.shift(floatArray0, 10);
97:       assertEquals(1, floatArray0.length);
98:       assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);
99:       
100:       int[] intArray0 = new int[9];
101:       intArray0[0] = 2;
102:       intArray0[1] = 2;
103:       intArray0[2] = 706;
104:       intArray0[3] = 10;
105:       intArray0[4] = 706;
106:       intArray0[5] = 706;
107:       intArray0[6] = 706;
108:       intArray0[7] = 37;
109:       intArray0[8] = (int) '(';
110:       boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray0);
111:       assertTrue(boolean0);
112:       assertEquals(9, intArray0.length);
113:       assertArrayEquals(new int[] {2, 2, 706, 10, 706, 706, 706, 37, 40}, intArray0);
114:   }
115: }
RegularFileObject[/tmp/EvoSuite_763_1619795834815/org/apache/commons/lang3/ArrayUtils_763_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:14 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_763_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_763_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_763_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_763_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:14.860 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[1];
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertEquals(1, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

Float float0 = new Float(2531.9F);
assertEquals(2531.9F, (float)float0, 0.01F);
assertNotNull(float0);

Float float1 = new Float(Float.NaN);
assertEquals(Float.NaN, (float)float1, 0.01F);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

double[] doubleArray0 = new double[6];
doubleArray0[0] = (double) '(';
doubleArray0[1] = (double) '(';
doubleArray0[2] = 2229.2209853282297;
doubleArray0[3] = (double) (-2294.6277F);
doubleArray0[4] = (double) 2531.9F;
int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2229.2209853282297);
assertEquals(2, int0);
assertEquals(6, doubleArray0.length);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0}, doubleArray0, 0.01);

float[] floatArray0 = ArrayUtils.addFirst((float[]) null, (float) 2);
assertEquals(1, floatArray0.length);
assertNotNull(floatArray0);
assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);

BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 37, (double) (-164.9F));
assertEquals(64, bitSet0.size());
assertEquals(0, bitSet0.cardinality());
assertEquals("{}", bitSet0.toString());
assertTrue(bitSet0.isEmpty());
assertEquals(0, bitSet0.length());
assertEquals(6, doubleArray0.length);
assertNotNull(bitSet0);
assertArrayEquals(new double[] {40.0, 40.0, 2229.2209853282297, (-2294.627685546875), 2531.89990234375, 0.0}, doubleArray0, 0.01);

BitSet bitSet1 = ArrayUtils.indexesOf((Object[]) characterArray0, (Object) float0, 2);
assertTrue(bitSet1.isEmpty());
assertEquals("{}", bitSet1.toString());
assertEquals(0, bitSet1.cardinality());
assertEquals(64, bitSet1.size());
assertEquals(0, bitSet1.length());
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertTrue(bitSet1.equals((Object)bitSet0));
assertNotEquals((float)float0, (float)float1, 0.01F);
assertNotNull(bitSet1);
assertArrayEquals(new char[] {'\u0000'}, charArray0);
assertNotSame(bitSet1, bitSet0);

ArrayUtils.swap(floatArray0, (-280), 706, 2);
assertEquals(1, floatArray0.length);
assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);

ArrayUtils.shift(floatArray0, 10);
assertEquals(1, floatArray0.length);
assertArrayEquals(new float[] {2.0F}, floatArray0, 0.01F);

int[] intArray0 = new int[9];
intArray0[0] = 2;
intArray0[1] = 2;
intArray0[2] = 706;
intArray0[3] = 10;
intArray0[4] = 706;
intArray0[5] = 706;
intArray0[6] = 706;
intArray0[7] = 37;
intArray0[8] = (int) '(';
boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray0);
assertTrue(boolean0);
assertEquals(9, intArray0.length);
assertArrayEquals(new int[] {2, 2, 706, 10, 706, 706, 706, 37, 40}, intArray0);


[MASTER] 15:17:18.380 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_843_1619795838348/org/apache/commons/lang3/ArrayUtils_843_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_843_1619795838348/org/apache/commons/lang3/ArrayUtils_843_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:18.380 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:18.380 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:18.381 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 47
[MASTER] 15:17:18.381 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_843_1619795838348/org/apache/commons/lang3/ArrayUtils_843_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:18.381 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:18.394 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_843_1619795838348/org/apache/commons/lang3/ArrayUtils_843_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:18 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.Arrays;
12: import java.util.BitSet;
13: import java.util.Comparator;
14: import java.util.Map;
15: import org.apache.commons.lang3.ArrayUtils;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class ArrayUtils_843_tmp__ESTest extends ArrayUtils_843_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       char[] charArray0 = new char[1];
27:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
28:       assertEquals(1, charArray0.length);
29:       assertEquals(1, characterArray0.length);
30:       assertNotNull(characterArray0);
31:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
32:       
33:       String[] stringArray0 = ArrayUtils.EMPTY_STRING_ARRAY;
34:       assertEquals(0, stringArray0.length);
35:       assertNotNull(stringArray0);
36:       
37:       Float float0 = new Float(2531.9F);
38:       assertEquals(2531.9F, (float)float0, 0.01F);
39:       assertNotNull(float0);
40:       
41:       Float float1 = new Float(Float.NaN);
42:       assertEquals(Float.NaN, (float)float1, 0.01F);
43:       assertNotEquals((float)float1, (float)float0, 0.01F);
44:       assertNotNull(float1);
45:       
46:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
47:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
48:       assertNotNull(comparator1);
49:       
50:       Float float2 = new Float((-2294.6277F));
51:       assertEquals((-2294.6277F), (float)float2, 0.01F);
52:       assertNotEquals((float)float2, (float)float1, 0.01F);
53:       assertNotEquals((float)float2, (float)float0, 0.01F);
54:       assertNotNull(float2);
55:       
56:       ArrayUtils.shift(charArray0, 134, 134, 134);
57:       assertEquals(1, charArray0.length);
58:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
59:       
60:       byte[] byteArray0 = new byte[3];
61:       byteArray0[0] = (byte) (-28);
62:       byteArray0[1] = (byte)91;
63:       byteArray0[2] = (byte)82;
64:       ArrayUtils.shift(byteArray0, 756, 45, (int) (byte)91);
65:       assertEquals(3, byteArray0.length);
66:       assertArrayEquals(new byte[] {(byte) (-28), (byte)91, (byte)82}, byteArray0);
67:       
68:       BitSet bitSet0 = ArrayUtils.indexesOf(charArray0, 'G');
69:       assertEquals(0, bitSet0.cardinality());
70:       assertEquals("{}", bitSet0.toString());
71:       assertEquals(0, bitSet0.length());
72:       assertEquals(64, bitSet0.size());
73:       assertTrue(bitSet0.isEmpty());
74:       assertEquals(1, charArray0.length);
75:       assertNotNull(bitSet0);
76:       assertArrayEquals(new char[] {'\u0000'}, charArray0);
77:       
78:       boolean[] booleanArray0 = new boolean[7];
79:       booleanArray0[0] = false;
80:       booleanArray0[1] = true;
81:       booleanArray0[2] = false;
82:       booleanArray0[3] = true;
83:       booleanArray0[4] = false;
84:       booleanArray0[5] = false;
85:       booleanArray0[6] = true;
86:       boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, false);
87:       assertEquals(8, booleanArray1.length);
88:       assertEquals(7, booleanArray0.length);
89:       assertFalse(booleanArray1.equals((Object)booleanArray0));
90:       assertNotNull(booleanArray1);
91:       assertTrue(Arrays.equals(new boolean[] {false, true, false, true, false, false, true, false}, booleanArray1));
92:       assertTrue(Arrays.equals(new boolean[] {false, true, false, true, false, false, true}, booleanArray0));
93:       assertNotSame(booleanArray1, booleanArray0);
94:       assertNotSame(booleanArray0, booleanArray1);
95:   }
96: }
RegularFileObject[/tmp/EvoSuite_843_1619795838348/org/apache/commons/lang3/ArrayUtils_843_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:18 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_843_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_843_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_843_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_843_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:18.395 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[1];
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(1, charArray0.length);
assertEquals(1, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

String[] stringArray0 = ArrayUtils.EMPTY_STRING_ARRAY;
assertEquals(0, stringArray0.length);
assertNotNull(stringArray0);

Float float0 = new Float(2531.9F);
assertEquals(2531.9F, (float)float0, 0.01F);
assertNotNull(float0);

Float float1 = new Float(Float.NaN);
assertEquals(Float.NaN, (float)float1, 0.01F);
assertNotEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float2 = new Float((-2294.6277F));
assertEquals((-2294.6277F), (float)float2, 0.01F);
assertNotEquals((float)float2, (float)float1, 0.01F);
assertNotEquals((float)float2, (float)float0, 0.01F);
assertNotNull(float2);

ArrayUtils.shift(charArray0, 134, 134, 134);
assertEquals(1, charArray0.length);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte) (-28);
byteArray0[1] = (byte)91;
byteArray0[2] = (byte)82;
ArrayUtils.shift(byteArray0, 756, 45, (int) (byte)91);
assertEquals(3, byteArray0.length);
assertArrayEquals(new byte[] {(byte) (-28), (byte)91, (byte)82}, byteArray0);

BitSet bitSet0 = ArrayUtils.indexesOf(charArray0, 'G');
assertEquals(0, bitSet0.cardinality());
assertEquals("{}", bitSet0.toString());
assertEquals(0, bitSet0.length());
assertEquals(64, bitSet0.size());
assertTrue(bitSet0.isEmpty());
assertEquals(1, charArray0.length);
assertNotNull(bitSet0);
assertArrayEquals(new char[] {'\u0000'}, charArray0);

boolean[] booleanArray0 = new boolean[7];
booleanArray0[0] = false;
booleanArray0[1] = true;
booleanArray0[2] = false;
booleanArray0[3] = true;
booleanArray0[4] = false;
booleanArray0[5] = false;
booleanArray0[6] = true;
boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, false);
assertEquals(8, booleanArray1.length);
assertEquals(7, booleanArray0.length);
assertFalse(booleanArray1.equals((Object)booleanArray0));
assertNotNull(booleanArray1);
assertTrue(Arrays.equals(new boolean[] {false, true, false, true, false, false, true, false}, booleanArray1));
assertTrue(Arrays.equals(new boolean[] {false, true, false, true, false, false, true}, booleanArray0));
assertNotSame(booleanArray1, booleanArray0);
assertNotSame(booleanArray0, booleanArray1);


[MASTER] 15:17:22.331 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_918_1619795842297/org/apache/commons/lang3/ArrayUtils_918_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_918_1619795842297/org/apache/commons/lang3/ArrayUtils_918_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:22.342 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:22.342 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:22.343 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 49
[MASTER] 15:17:22.343 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_918_1619795842297/org/apache/commons/lang3/ArrayUtils_918_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:22.343 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:22.343 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_918_1619795842297/org/apache/commons/lang3/ArrayUtils_918_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:22 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.Comparator;
12: import java.util.Map;
13: import org.apache.commons.lang3.ArrayUtils;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class ArrayUtils_918_tmp__ESTest extends ArrayUtils_918_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       char[] charArray0 = new char[3];
25:       charArray0[1] = 'f';
26:       charArray0[2] = 'Z';
27:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
28:       assertEquals(3, charArray0.length);
29:       assertEquals(3, characterArray0.length);
30:       assertNotNull(characterArray0);
31:       assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);
32:       
33:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
34:       assertEquals(3, charArray0.length);
35:       assertEquals(3, characterArray0.length);
36:       assertEquals(3, stringArray0.length);
37:       assertNotNull(stringArray0);
38:       assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);
39:       
40:       Integer integer0 = new Integer(0);
41:       assertEquals(0, (int)integer0);
42:       assertNotNull(integer0);
43:       
44:       Float float0 = new Float(29.0F);
45:       assertEquals(29.0F, (float)float0, 0.01F);
46:       assertNotNull(float0);
47:       
48:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
49:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
50:       assertNotNull(comparator1);
51:       
52:       Float float1 = new Float(29.0F);
53:       assertEquals(29.0F, (float)float1, 0.01F);
54:       assertEquals((float)float1, (float)float0, 0.01F);
55:       assertNotNull(float1);
56:       
57:       byte[] byteArray0 = new byte[7];
58:       byteArray0[0] = (byte) (-62);
59:       byteArray0[1] = (byte)71;
60:       byteArray0[6] = (byte) (-62);
61:       byteArray0[3] = (byte) (-60);
62:       byteArray0[4] = (byte) (-60);
63:       byteArray0[5] = (byte) (-60);
64:       byteArray0[6] = (byte) (-62);
65:       ArrayUtils.shift(byteArray0, (int) (byte) (-60));
66:       assertEquals(7, byteArray0.length);
67:       assertArrayEquals(new byte[] {(byte) (-60), (byte) (-60), (byte) (-62), (byte) (-62), (byte)71, (byte)0, (byte) (-60)}, byteArray0);
68:   }
69: }
RegularFileObject[/tmp/EvoSuite_918_1619795842297/org/apache/commons/lang3/ArrayUtils_918_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:22 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_918_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_918_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_918_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_918_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:22.346 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[3];
charArray0[1] = 'f';
charArray0[2] = 'Z';
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertEquals(3, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

Float float0 = new Float(29.0F);
assertEquals(29.0F, (float)float0, 0.01F);
assertNotNull(float0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float1 = new Float(29.0F);
assertEquals(29.0F, (float)float1, 0.01F);
assertEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-62);
byteArray0[1] = (byte)71;
byteArray0[6] = (byte) (-62);
byteArray0[3] = (byte) (-60);
byteArray0[4] = (byte) (-60);
byteArray0[5] = (byte) (-60);
byteArray0[6] = (byte) (-62);
ArrayUtils.shift(byteArray0, (int) (byte) (-60));
assertEquals(7, byteArray0.length);
assertArrayEquals(new byte[] {(byte) (-60), (byte) (-60), (byte) (-62), (byte) (-62), (byte)71, (byte)0, (byte) (-60)}, byteArray0);


[MASTER] 15:17:22.415 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_921_1619795842396/org/apache/commons/lang3/ArrayUtils_921_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_921_1619795842396/org/apache/commons/lang3/ArrayUtils_921_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:22.415 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:22.415 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:22.416 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 51
[MASTER] 15:17:22.416 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_921_1619795842396/org/apache/commons/lang3/ArrayUtils_921_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:22.416 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:22.416 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_921_1619795842396/org/apache/commons/lang3/ArrayUtils_921_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:22 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.Comparator;
12: import java.util.Map;
13: import java.util.Random;
14: import org.apache.commons.lang3.ArrayUtils;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.evosuite.runtime.mock.java.util.MockRandom;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class ArrayUtils_921_tmp__ESTest extends ArrayUtils_921_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       char[] charArray0 = new char[3];
27:       charArray0[1] = 'f';
28:       charArray0[2] = 'Z';
29:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
30:       assertEquals(3, charArray0.length);
31:       assertEquals(3, characterArray0.length);
32:       assertNotNull(characterArray0);
33:       assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);
34:       
35:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
36:       assertEquals(3, charArray0.length);
37:       assertEquals(3, characterArray0.length);
38:       assertEquals(3, stringArray0.length);
39:       assertNotNull(stringArray0);
40:       assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);
41:       
42:       Integer integer0 = new Integer(0);
43:       assertEquals(0, (int)integer0);
44:       assertNotNull(integer0);
45:       
46:       Float float0 = new Float(29.0F);
47:       assertEquals(29.0F, (float)float0, 0.01F);
48:       assertNotNull(float0);
49:       
50:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
51:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
52:       assertNotNull(comparator1);
53:       
54:       Float float1 = new Float(29.0F);
55:       assertEquals(29.0F, (float)float1, 0.01F);
56:       assertEquals((float)float1, (float)float0, 0.01F);
57:       assertNotNull(float1);
58:       
59:       byte[] byteArray0 = new byte[7];
60:       byteArray0[0] = (byte) (-62);
61:       byteArray0[1] = (byte)71;
62:       byteArray0[6] = (byte) (-62);
63:       byteArray0[3] = (byte) (-60);
64:       byteArray0[4] = (byte) (-60);
65:       byteArray0[5] = (byte) (-60);
66:       byteArray0[6] = (byte) (-62);
67:       byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) (-60), (-826));
68:       assertEquals(0, byteArray1.length);
69:       assertEquals(7, byteArray0.length);
70:       assertFalse(byteArray1.equals((Object)byteArray0));
71:       assertNotNull(byteArray1);
72:       assertArrayEquals(new byte[] {}, byteArray1);
73:       assertArrayEquals(new byte[] {(byte) (-62), (byte)71, (byte)0, (byte) (-60), (byte) (-60), (byte) (-60), (byte) (-62)}, byteArray0);
74:       assertNotSame(byteArray1, byteArray0);
75:       assertNotSame(byteArray0, byteArray1);
76:       
77:       int[] intArray0 = new int[1];
78:       intArray0[0] = (int) (byte) (-62);
79:       ArrayUtils.shift(intArray0, 2146664279);
80:       assertEquals(1, intArray0.length);
81:       assertArrayEquals(new int[] {(-62)}, intArray0);
82:       
83:       double[] doubleArray0 = new double[9];
84:       doubleArray0[0] = (double) 2146664279;
85:       doubleArray0[1] = (double) (byte) (-62);
86:       doubleArray0[2] = (double) 0;
87:       doubleArray0[3] = (double) 'f';
88:       doubleArray0[4] = (double) 'Z';
89:       doubleArray0[5] = (double) (-62);
90:       doubleArray0[6] = (double) 'Z';
91:       doubleArray0[7] = (double) (byte) (-60);
92:       doubleArray0[8] = (double) 0;
93:       MockRandom mockRandom0 = new MockRandom();
94:       assertNotNull(mockRandom0);
95:       
96:       ArrayUtils.shuffle(doubleArray0, (Random) mockRandom0);
97:       assertEquals(9, doubleArray0.length);
98:       assertArrayEquals(new double[] {(-62.0), 0.0, 102.0, 90.0, (-62.0), 90.0, (-60.0), 0.0, 2.146664279E9}, doubleArray0, 0.01);
99:   }
100: }
RegularFileObject[/tmp/EvoSuite_921_1619795842396/org/apache/commons/lang3/ArrayUtils_921_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:22 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_921_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_921_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_921_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_921_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:22.417 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[3];
charArray0[1] = 'f';
charArray0[2] = 'Z';
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertEquals(3, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'\u0000', 'f', 'Z'}, charArray0);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

Float float0 = new Float(29.0F);
assertEquals(29.0F, (float)float0, 0.01F);
assertNotNull(float0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float1 = new Float(29.0F);
assertEquals(29.0F, (float)float1, 0.01F);
assertEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-62);
byteArray0[1] = (byte)71;
byteArray0[6] = (byte) (-62);
byteArray0[3] = (byte) (-60);
byteArray0[4] = (byte) (-60);
byteArray0[5] = (byte) (-60);
byteArray0[6] = (byte) (-62);
byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) (-60), (-826));
assertEquals(0, byteArray1.length);
assertEquals(7, byteArray0.length);
assertFalse(byteArray1.equals((Object)byteArray0));
assertNotNull(byteArray1);
assertArrayEquals(new byte[] {}, byteArray1);
assertArrayEquals(new byte[] {(byte) (-62), (byte)71, (byte)0, (byte) (-60), (byte) (-60), (byte) (-60), (byte) (-62)}, byteArray0);
assertNotSame(byteArray1, byteArray0);
assertNotSame(byteArray0, byteArray1);

int[] intArray0 = new int[1];
intArray0[0] = (int) (byte) (-62);
ArrayUtils.shift(intArray0, 2146664279);
assertEquals(1, intArray0.length);
assertArrayEquals(new int[] {(-62)}, intArray0);

double[] doubleArray0 = new double[9];
doubleArray0[0] = (double) 2146664279;
doubleArray0[1] = (double) (byte) (-62);
doubleArray0[2] = (double) 0;
doubleArray0[3] = (double) 'f';
doubleArray0[4] = (double) 'Z';
doubleArray0[5] = (double) (-62);
doubleArray0[6] = (double) 'Z';
doubleArray0[7] = (double) (byte) (-60);
doubleArray0[8] = (double) 0;
MockRandom mockRandom0 = new MockRandom();
assertNotNull(mockRandom0);

ArrayUtils.shuffle(doubleArray0, (Random) mockRandom0);
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {(-62.0), 0.0, 102.0, 90.0, (-62.0), 90.0, (-60.0), 0.0, 2.146664279E9}, doubleArray0, 0.01);


[MASTER] 15:17:24.011 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_942_1619795843972/org/apache/commons/lang3/ArrayUtils_942_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_942_1619795843972/org/apache/commons/lang3/ArrayUtils_942_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:24.011 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:24.011 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:24.016 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 33
[MASTER] 15:17:24.018 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_942_1619795843972/org/apache/commons/lang3/ArrayUtils_942_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:24.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:24.021 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_942_1619795843972/org/apache/commons/lang3/ArrayUtils_942_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:23 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.Comparator;
12: import java.util.Map;
13: import org.apache.commons.lang3.ArrayUtils;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class ArrayUtils_942_tmp__ESTest extends ArrayUtils_942_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       Integer integer0 = new Integer(0);
25:       assertEquals(0, (int)integer0);
26:       assertNotNull(integer0);
27:       
28:       Float float0 = new Float(29.0F);
29:       assertEquals(29.0F, (float)float0, 0.01F);
30:       assertNotNull(float0);
31:       
32:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
33:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
34:       assertNotNull(comparator1);
35:       
36:       Float float1 = new Float(29.0F);
37:       assertEquals(29.0F, (float)float1, 0.01F);
38:       assertEquals((float)float1, (float)float0, 0.01F);
39:       assertNotNull(float1);
40:       
41:       byte[] byteArray0 = new byte[7];
42:       byteArray0[0] = (byte) (-62);
43:       byteArray0[1] = (byte)71;
44:       byteArray0[6] = (byte) (-62);
45:       byteArray0[3] = (byte) (-60);
46:       byteArray0[4] = (byte) (-60);
47:       byteArray0[5] = (byte) (-60);
48:       byteArray0[6] = (byte) (-62);
49:       ArrayUtils.shift(byteArray0, (int) (byte) (-60));
50:       assertEquals(7, byteArray0.length);
51:       assertArrayEquals(new byte[] {(byte) (-60), (byte) (-60), (byte) (-62), (byte) (-62), (byte)71, (byte)0, (byte) (-60)}, byteArray0);
52:       
53:       Short[] shortArray0 = new Short[0];
54:       short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short)12);
55:       assertEquals(0, shortArray0.length);
56:       assertEquals(0, shortArray1.length);
57:       assertNotNull(shortArray1);
58:       assertArrayEquals(new short[] {}, shortArray1);
59:       
60:       Short[] shortArray2 = ArrayUtils.toObject(shortArray1);
61:       assertEquals(0, shortArray2.length);
62:       assertEquals(0, shortArray0.length);
63:       assertEquals(0, shortArray1.length);
64:       assertFalse(shortArray2.equals((Object)shortArray0));
65:       assertNotNull(shortArray2);
66:       assertArrayEquals(new short[] {}, shortArray1);
67:       assertNotSame(shortArray2, shortArray0);
68:       assertNotSame(shortArray0, shortArray2);
69:   }
70: }
RegularFileObject[/tmp/EvoSuite_942_1619795843972/org/apache/commons/lang3/ArrayUtils_942_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:23 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_942_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_942_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_942_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_942_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:24.022 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

Float float0 = new Float(29.0F);
assertEquals(29.0F, (float)float0, 0.01F);
assertNotNull(float0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float1 = new Float(29.0F);
assertEquals(29.0F, (float)float1, 0.01F);
assertEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-62);
byteArray0[1] = (byte)71;
byteArray0[6] = (byte) (-62);
byteArray0[3] = (byte) (-60);
byteArray0[4] = (byte) (-60);
byteArray0[5] = (byte) (-60);
byteArray0[6] = (byte) (-62);
ArrayUtils.shift(byteArray0, (int) (byte) (-60));
assertEquals(7, byteArray0.length);
assertArrayEquals(new byte[] {(byte) (-60), (byte) (-60), (byte) (-62), (byte) (-62), (byte)71, (byte)0, (byte) (-60)}, byteArray0);

Short[] shortArray0 = new Short[0];
short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short)12);
assertEquals(0, shortArray0.length);
assertEquals(0, shortArray1.length);
assertNotNull(shortArray1);
assertArrayEquals(new short[] {}, shortArray1);

Short[] shortArray2 = ArrayUtils.toObject(shortArray1);
assertEquals(0, shortArray2.length);
assertEquals(0, shortArray0.length);
assertEquals(0, shortArray1.length);
assertFalse(shortArray2.equals((Object)shortArray0));
assertNotNull(shortArray2);
assertArrayEquals(new short[] {}, shortArray1);
assertNotSame(shortArray2, shortArray0);
assertNotSame(shortArray0, shortArray2);


[MASTER] 15:17:24.051 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_943_1619795844023/org/apache/commons/lang3/ArrayUtils_943_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_943_1619795844023/org/apache/commons/lang3/ArrayUtils_943_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:24.051 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:24.051 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:24.051 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 25
[MASTER] 15:17:24.051 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_943_1619795844023/org/apache/commons/lang3/ArrayUtils_943_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:24.052 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:24.052 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_943_1619795844023/org/apache/commons/lang3/ArrayUtils_943_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:24 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.Comparator;
12: import java.util.Map;
13: import org.apache.commons.lang3.ArrayUtils;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class ArrayUtils_943_tmp__ESTest extends ArrayUtils_943_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
25:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
26:       assertNotNull(comparator1);
27:       
28:       byte[] byteArray0 = new byte[7];
29:       byteArray0[0] = (byte) (-62);
30:       byteArray0[1] = (byte) (-62);
31:       byteArray0[6] = (byte) (-62);
32:       byteArray0[3] = (byte) (-60);
33:       byteArray0[4] = (byte) (-60);
34:       byteArray0[5] = (byte) (-60);
35:       Short[] shortArray0 = new Short[0];
36:       short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short)12);
37:       assertEquals(0, shortArray0.length);
38:       assertEquals(0, shortArray1.length);
39:       assertNotNull(shortArray1);
40:       assertArrayEquals(new short[] {}, shortArray1);
41:       
42:       Short[] shortArray2 = ArrayUtils.toObject(shortArray1);
43:       assertEquals(0, shortArray0.length);
44:       assertEquals(0, shortArray1.length);
45:       assertEquals(0, shortArray2.length);
46:       assertFalse(shortArray2.equals((Object)shortArray0));
47:       assertNotNull(shortArray2);
48:       assertArrayEquals(new short[] {}, shortArray1);
49:       assertNotSame(shortArray0, shortArray2);
50:       assertNotSame(shortArray2, shortArray0);
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_943_1619795844023/org/apache/commons/lang3/ArrayUtils_943_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:24 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_943_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_943_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_943_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_943_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:24.053 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-62);
byteArray0[1] = (byte) (-62);
byteArray0[6] = (byte) (-62);
byteArray0[3] = (byte) (-60);
byteArray0[4] = (byte) (-60);
byteArray0[5] = (byte) (-60);
Short[] shortArray0 = new Short[0];
short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short)12);
assertEquals(0, shortArray0.length);
assertEquals(0, shortArray1.length);
assertNotNull(shortArray1);
assertArrayEquals(new short[] {}, shortArray1);

Short[] shortArray2 = ArrayUtils.toObject(shortArray1);
assertEquals(0, shortArray0.length);
assertEquals(0, shortArray1.length);
assertEquals(0, shortArray2.length);
assertFalse(shortArray2.equals((Object)shortArray0));
assertNotNull(shortArray2);
assertArrayEquals(new short[] {}, shortArray1);
assertNotSame(shortArray0, shortArray2);
assertNotSame(shortArray2, shortArray0);


[MASTER] 15:17:25.071 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_973_1619795844990/org/apache/commons/lang3/ArrayUtils_973_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_973_1619795844990/org/apache/commons/lang3/ArrayUtils_973_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:25.072 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:25.072 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:25.073 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 55
[MASTER] 15:17:25.073 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_973_1619795844990/org/apache/commons/lang3/ArrayUtils_973_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:25.073 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:25.074 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_973_1619795844990/org/apache/commons/lang3/ArrayUtils_973_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:24 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.lang.reflect.Array;
13: import java.util.AbstractMap;
14: import java.util.BitSet;
15: import java.util.Comparator;
16: import java.util.Map;
17: import java.util.Random;
18: import org.apache.commons.lang3.ArrayUtils;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.evosuite.runtime.ViolatedAssumptionAnswer;
22: import org.evosuite.runtime.mock.java.util.MockRandom;
23: import org.junit.runner.RunWith;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
26: public class ArrayUtils_973_tmp__ESTest extends ArrayUtils_973_tmp__ESTest_scaffolding {
27: 
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       char[] charArray0 = new char[3];
31:       charArray0[2] = 'Z';
32:       Character[] characterArray0 = ArrayUtils.toObject(charArray0);
33:       assertEquals(3, charArray0.length);
34:       assertEquals(3, characterArray0.length);
35:       assertNotNull(characterArray0);
36:       assertArrayEquals(new char[] {'\u0000', '\u0000', 'Z'}, charArray0);
37:       
38:       String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
39:       assertEquals(3, charArray0.length);
40:       assertEquals(3, characterArray0.length);
41:       assertEquals(3, stringArray0.length);
42:       assertNotNull(stringArray0);
43:       assertArrayEquals(new char[] {'\u0000', '\u0000', 'Z'}, charArray0);
44:       
45:       AbstractMap.SimpleEntry<Object, Object>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Object, Object>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 4);
46:       Integer integer0 = new Integer('f');
47:       assertEquals(102, (int)integer0);
48:       assertNotNull(integer0);
49:       
50:       Float float0 = new Float(29.0F);
51:       assertEquals(29.0F, (float)float0, 0.01F);
52:       assertNotNull(float0);
53:       
54:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
55:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
56:       assertNotNull(comparator1);
57:       
58:       Float float1 = new Float(29.0F);
59:       assertEquals(29.0F, (float)float1, 0.01F);
60:       assertEquals((float)float1, (float)float0, 0.01F);
61:       assertNotNull(float1);
62:       
63:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(float1, "");
64:       assertEquals((float)float1, (float)float0, 0.01F);
65:       assertNotNull(abstractMap_SimpleEntry0);
66:       
67:       double[] doubleArray0 = new double[9];
68:       doubleArray0[0] = (double) 'f';
69:       doubleArray0[1] = (double) 'F';
70:       doubleArray0[2] = (double) '\u0000';
71:       doubleArray0[3] = (double) 'f';
72:       doubleArray0[5] = (double) 'f';
73:       doubleArray0[6] = (double) 29.0F;
74:       doubleArray0[8] = (double) 'Z';
75:       BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 29.0F, (int) 'Z');
76:       assertEquals(0, bitSet0.length());
77:       assertEquals(64, bitSet0.size());
78:       assertTrue(bitSet0.isEmpty());
79:       assertEquals(0, bitSet0.cardinality());
80:       assertEquals("{}", bitSet0.toString());
81:       assertEquals(9, doubleArray0.length);
82:       assertNotNull(bitSet0);
83:       assertArrayEquals(new double[] {102.0, 70.0, 0.0, 102.0, 0.0, 102.0, 29.0, 0.0, 90.0}, doubleArray0, 0.01);
84:       
85:       int int0 = ArrayUtils.lastIndexOf(doubleArray0, 90.0, (double) 'Z');
86:       assertEquals(8, int0);
87:       assertEquals(9, doubleArray0.length);
88:       assertArrayEquals(new double[] {102.0, 70.0, 0.0, 102.0, 0.0, 102.0, 29.0, 0.0, 90.0}, doubleArray0, 0.01);
89:       
90:       MockRandom mockRandom0 = new MockRandom('\u0000');
91:       assertNotNull(mockRandom0);
92:       
93:       float float2 = mockRandom0.nextFloat();
94:       assertEquals(0.0F, float2, 0.01F);
95:       
96:       ArrayUtils.shuffle((Object[]) characterArray0, (Random) mockRandom0);
97:       assertEquals(3, charArray0.length);
98:       assertEquals(3, characterArray0.length);
99:       assertArrayEquals(new char[] {'\u0000', '\u0000', 'Z'}, charArray0);
100:       
101:       int[] intArray0 = new int[1];
102:       intArray0[0] = (int) 'F';
103:       // Undeclared exception!
104:       try { 
105:         ArrayUtils.removeAll((Object) null, intArray0);
106:         fail("Expecting exception: IndexOutOfBoundsException");
107:       
108:       } catch(IndexOutOfBoundsException e) {
109:          //
110:          // Index: 70, Length: 0
111:          //
112:          verifyException("org.apache.commons.lang3.ArrayUtils", e);
113:       }
114:   }
115: }
RegularFileObject[/tmp/EvoSuite_973_1619795844990/org/apache/commons/lang3/ArrayUtils_973_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:25 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_973_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_973_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_973_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_973_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:25.076 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
char[] charArray0 = new char[3];
charArray0[2] = 'Z';
Character[] characterArray0 = ArrayUtils.toObject(charArray0);
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertNotNull(characterArray0);
assertArrayEquals(new char[] {'\u0000', '\u0000', 'Z'}, charArray0);

String[] stringArray0 = ArrayUtils.toStringArray((Object[]) characterArray0, "=");
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertEquals(3, stringArray0.length);
assertNotNull(stringArray0);
assertArrayEquals(new char[] {'\u0000', '\u0000', 'Z'}, charArray0);

AbstractMap.SimpleEntry<Object, Object>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Object, Object>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 4);
Integer integer0 = new Integer('f');
assertEquals(102, (int)integer0);
assertNotNull(integer0);

Float float0 = new Float(29.0F);
assertEquals(29.0F, (float)float0, 0.01F);
assertNotNull(float0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float1 = new Float(29.0F);
assertEquals(29.0F, (float)float1, 0.01F);
assertEquals((float)float1, (float)float0, 0.01F);
assertNotNull(float1);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(float1, "");
assertEquals((float)float1, (float)float0, 0.01F);
assertNotNull(abstractMap_SimpleEntry0);

double[] doubleArray0 = new double[9];
doubleArray0[0] = (double) 'f';
doubleArray0[1] = (double) 'F';
doubleArray0[2] = (double) '\u0000';
doubleArray0[3] = (double) 'f';
doubleArray0[5] = (double) 'f';
doubleArray0[6] = (double) 29.0F;
doubleArray0[8] = (double) 'Z';
BitSet bitSet0 = ArrayUtils.indexesOf(doubleArray0, (double) 29.0F, (int) 'Z');
assertEquals(0, bitSet0.length());
assertEquals(64, bitSet0.size());
assertTrue(bitSet0.isEmpty());
assertEquals(0, bitSet0.cardinality());
assertEquals("{}", bitSet0.toString());
assertEquals(9, doubleArray0.length);
assertNotNull(bitSet0);
assertArrayEquals(new double[] {102.0, 70.0, 0.0, 102.0, 0.0, 102.0, 29.0, 0.0, 90.0}, doubleArray0, 0.01);

int int0 = ArrayUtils.lastIndexOf(doubleArray0, 90.0, (double) 'Z');
assertEquals(8, int0);
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {102.0, 70.0, 0.0, 102.0, 0.0, 102.0, 29.0, 0.0, 90.0}, doubleArray0, 0.01);

MockRandom mockRandom0 = new MockRandom('\u0000');
assertNotNull(mockRandom0);

float float2 = mockRandom0.nextFloat();
assertEquals(0.0F, float2, 0.01F);

ArrayUtils.shuffle((Object[]) characterArray0, (Random) mockRandom0);
assertEquals(3, charArray0.length);
assertEquals(3, characterArray0.length);
assertArrayEquals(new char[] {'\u0000', '\u0000', 'Z'}, charArray0);

int[] intArray0 = new int[1];
intArray0[0] = (int) 'F';
ArrayUtils.removeAll((Object) null, intArray0);

[MASTER] 15:17:29.214 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_1076_1619795849142/org/apache/commons/lang3/ArrayUtils_1076_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_1076_1619795849142/org/apache/commons/lang3/ArrayUtils_1076_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:29.216 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:29.216 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:29.216 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 51
[MASTER] 15:17:29.217 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_1076_1619795849142/org/apache/commons/lang3/ArrayUtils_1076_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:29.217 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:29.217 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_1076_1619795849142/org/apache/commons/lang3/ArrayUtils_1076_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:29 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.Comparator;
12: import java.util.Map;
13: import org.apache.commons.lang3.ArrayUtils;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class ArrayUtils_1076_tmp__ESTest extends ArrayUtils_1076_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       short[] shortArray0 = new short[5];
25:       short short0 = (short)0;
26:       shortArray0[2] = (short)0;
27:       short short1 = (short)91;
28:       Short short2 = new Short((short)91);
29:       assertEquals((short)91, (short)short2);
30:       assertFalse(short2.equals((Object)short0));
31:       assertTrue(short2.equals((Object)short1));
32:       assertNotNull(short2);
33:       
34:       Short[] shortArray1 = new Short[5];
35:       shortArray1[0] = short2;
36:       shortArray1[1] = (Short) (short)0;
37:       shortArray1[2] = short2;
38:       shortArray1[3] = (Short) (short)0;
39:       shortArray1[4] = short2;
40:       Class<Short[]> class0 = Short[].class;
41:       Short[] shortArray2 = ArrayUtils.nullToEmpty(shortArray1, class0);
42:       assertEquals(5, shortArray1.length);
43:       assertEquals(5, shortArray2.length);
44:       assertNotNull(shortArray2);
45:       assertSame(shortArray1, shortArray2);
46:       assertSame(shortArray2, shortArray1);
47:       
48:       byte[] byteArray0 = new byte[1];
49:       byteArray0[0] = (byte)7;
50:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
51:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
52:       assertNotNull(comparator1);
53:       
54:       Float float0 = new Float((float) short1);
55:       assertEquals(91.0F, (float)float0, 0.01F);
56:       assertFalse(short1 == short0);
57:       assertNotNull(float0);
58:       
59:       ArrayUtils.shift(byteArray0, (int) short0);
60:       assertEquals(1, byteArray0.length);
61:       assertFalse(short0 == short1);
62:       assertArrayEquals(new byte[] {(byte)7}, byteArray0);
63:       
64:       short[] shortArray3 = ArrayUtils.toPrimitive(shortArray2, (short)9438);
65:       assertEquals(5, shortArray3.length);
66:       assertEquals(5, shortArray1.length);
67:       assertEquals(5, shortArray2.length);
68:       assertFalse(shortArray3.equals((Object)shortArray0));
69:       assertNotNull(shortArray3);
70:       assertArrayEquals(new short[] {(short)91, (short)0, (short)91, (short)0, (short)91}, shortArray3);
71:       assertNotSame(shortArray3, shortArray0);
72:       assertSame(shortArray1, shortArray2);
73:       assertSame(shortArray2, shortArray1);
74:       
75:       Short[] shortArray4 = ArrayUtils.toObject(shortArray3);
76:       assertEquals(5, shortArray3.length);
77:       assertEquals(5, shortArray4.length);
78:       assertEquals(5, shortArray1.length);
79:       assertEquals(5, shortArray2.length);
80:       assertFalse(shortArray3.equals((Object)shortArray0));
81:       assertFalse(shortArray4.equals((Object)shortArray2));
82:       assertFalse(shortArray4.equals((Object)shortArray1));
83:       assertNotNull(shortArray4);
84:       assertArrayEquals(new short[] {(short)91, (short)0, (short)91, (short)0, (short)91}, shortArray3);
85:       assertNotSame(shortArray3, shortArray0);
86:       assertNotSame(shortArray4, shortArray2);
87:       assertNotSame(shortArray4, shortArray1);
88:       assertNotSame(shortArray1, shortArray4);
89:       assertSame(shortArray1, shortArray2);
90:       assertSame(shortArray2, shortArray1);
91:       assertNotSame(shortArray2, shortArray4);
92:       
93:       long[] longArray0 = new long[0];
94:       boolean boolean0 = ArrayUtils.contains(longArray0, (long) (short)91);
95:       assertFalse(boolean0);
96:       assertEquals(0, longArray0.length);
97:       assertArrayEquals(new long[] {}, longArray0);
98:   }
99: }
RegularFileObject[/tmp/EvoSuite_1076_1619795849142/org/apache/commons/lang3/ArrayUtils_1076_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:29 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_1076_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_1076_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_1076_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_1076_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:29.219 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
short[] shortArray0 = new short[5];
short short0 = (short)0;
shortArray0[2] = (short)0;
short short1 = (short)91;
Short short2 = new Short((short)91);
assertEquals((short)91, (short)short2);
assertFalse(short2.equals((Object)short0));
assertTrue(short2.equals((Object)short1));
assertNotNull(short2);

Short[] shortArray1 = new Short[5];
shortArray1[0] = short2;
shortArray1[1] = (Short) (short)0;
shortArray1[2] = short2;
shortArray1[3] = (Short) (short)0;
shortArray1[4] = short2;
Class<Short[]> class0 = Short[].class;
Short[] shortArray2 = ArrayUtils.nullToEmpty(shortArray1, class0);
assertEquals(5, shortArray1.length);
assertEquals(5, shortArray2.length);
assertNotNull(shortArray2);
assertSame(shortArray1, shortArray2);
assertSame(shortArray2, shortArray1);

byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)7;
Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float0 = new Float((float) short1);
assertEquals(91.0F, (float)float0, 0.01F);
assertFalse(short1 == short0);
assertNotNull(float0);

ArrayUtils.shift(byteArray0, (int) short0);
assertEquals(1, byteArray0.length);
assertFalse(short0 == short1);
assertArrayEquals(new byte[] {(byte)7}, byteArray0);

short[] shortArray3 = ArrayUtils.toPrimitive(shortArray2, (short)9438);
assertEquals(5, shortArray3.length);
assertEquals(5, shortArray1.length);
assertEquals(5, shortArray2.length);
assertFalse(shortArray3.equals((Object)shortArray0));
assertNotNull(shortArray3);
assertArrayEquals(new short[] {(short)91, (short)0, (short)91, (short)0, (short)91}, shortArray3);
assertNotSame(shortArray3, shortArray0);
assertSame(shortArray1, shortArray2);
assertSame(shortArray2, shortArray1);

Short[] shortArray4 = ArrayUtils.toObject(shortArray3);
assertEquals(5, shortArray3.length);
assertEquals(5, shortArray4.length);
assertEquals(5, shortArray1.length);
assertEquals(5, shortArray2.length);
assertFalse(shortArray3.equals((Object)shortArray0));
assertFalse(shortArray4.equals((Object)shortArray2));
assertFalse(shortArray4.equals((Object)shortArray1));
assertNotNull(shortArray4);
assertArrayEquals(new short[] {(short)91, (short)0, (short)91, (short)0, (short)91}, shortArray3);
assertNotSame(shortArray3, shortArray0);
assertNotSame(shortArray4, shortArray2);
assertNotSame(shortArray4, shortArray1);
assertNotSame(shortArray1, shortArray4);
assertSame(shortArray1, shortArray2);
assertSame(shortArray2, shortArray1);
assertNotSame(shortArray2, shortArray4);

long[] longArray0 = new long[0];
boolean boolean0 = ArrayUtils.contains(longArray0, (long) (short)91);
assertFalse(boolean0);
assertEquals(0, longArray0.length);
assertArrayEquals(new long[] {}, longArray0);


[MASTER] 15:17:31.583 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_1140_1619795851556/org/apache/commons/lang3/ArrayUtils_1140_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_1140_1619795851556/org/apache/commons/lang3/ArrayUtils_1140_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:31.583 [logback-2] ERROR JUnitAnalyzer - Classpath: projects/Lang/commons-lang3-3.12.0.jar:/evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:31.586 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /evosuite-bin/evosuite.jar:/evosuite/projects/Lang/commons-lang3-3.12.0.jar
[MASTER] 15:17:31.591 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Character>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Byte,java.lang.Character>>: 29
[MASTER] 15:17:31.592 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_1140_1619795851556/org/apache/commons/lang3/ArrayUtils_1140_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:17:31.593 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:17:31.595 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_1140_1619795851556/org/apache/commons/lang3/ArrayUtils_1140_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Apr 30 15:17:31 GMT 2021
4:  */
5: 
6: package org.apache.commons.lang3;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.Comparator;
12: import java.util.Map;
13: import org.apache.commons.lang3.ArrayUtils;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class ArrayUtils_1140_tmp__ESTest extends ArrayUtils_1140_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       Integer integer0 = new Integer(0);
25:       assertEquals(0, (int)integer0);
26:       assertNotNull(integer0);
27:       
28:       Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
29:       Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
30:       assertNotNull(comparator1);
31:       
32:       Float float0 = new Float(29.0F);
33:       assertEquals(29.0F, (float)float0, 0.01F);
34:       assertNotNull(float0);
35:       
36:       byte[] byteArray0 = new byte[7];
37:       byteArray0[0] = (byte) (-62);
38:       byteArray0[1] = (byte) (-62);
39:       byteArray0[0] = (byte) (-62);
40:       byteArray0[3] = (byte) (-60);
41:       byteArray0[4] = (byte) (-60);
42:       byteArray0[5] = (byte) (-60);
43:       ArrayUtils.shift(byteArray0, (int) (byte)0);
44:       assertEquals(7, byteArray0.length);
45:       assertArrayEquals(new byte[] {(byte) (-62), (byte) (-62), (byte)0, (byte) (-60), (byte) (-60), (byte) (-60), (byte)0}, byteArray0);
46:       
47:       Short[] shortArray0 = new Short[1];
48:       short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short)12);
49:       assertEquals(1, shortArray0.length);
50:       assertEquals(1, shortArray1.length);
51:       assertNotNull(shortArray1);
52:       assertArrayEquals(new short[] {(short)12}, shortArray1);
53:       
54:       Short[] shortArray2 = ArrayUtils.toObject(shortArray1);
55:       assertEquals(1, shortArray0.length);
56:       assertEquals(1, shortArray1.length);
57:       assertEquals(1, shortArray2.length);
58:       assertFalse(shortArray2.equals((Object)shortArray0));
59:       assertNotNull(shortArray2);
60:       assertArrayEquals(new short[] {(short)12}, shortArray1);
61:       assertNotSame(shortArray0, shortArray2);
62:       assertNotSame(shortArray2, shortArray0);
63:       
64:       short[] shortArray3 = ArrayUtils.removeElements(shortArray1, shortArray1);
65:       assertEquals(1, shortArray0.length);
66:       assertEquals(1, shortArray1.length);
67:       assertEquals(0, shortArray3.length);
68:       assertFalse(shortArray0.equals((Object)shortArray2));
69:       assertFalse(shortArray3.equals((Object)shortArray1));
70:       assertNotNull(shortArray3);
71:       assertArrayEquals(new short[] {(short)12}, shortArray1);
72:       assertArrayEquals(new short[] {}, shortArray3);
73:       assertNotSame(shortArray0, shortArray2);
74:       assertNotSame(shortArray1, shortArray3);
75:       assertNotSame(shortArray3, shortArray1);
76:       
77:       boolean boolean0 = ArrayUtils.contains(byteArray0, (byte)24);
78:       assertFalse(boolean0);
79:       assertEquals(7, byteArray0.length);
80:       assertArrayEquals(new byte[] {(byte) (-62), (byte) (-62), (byte)0, (byte) (-60), (byte) (-60), (byte) (-60), (byte)0}, byteArray0);
81:   }
82: }
RegularFileObject[/tmp/EvoSuite_1140_1619795851556/org/apache/commons/lang3/ArrayUtils_1140_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Apr 30 15:17:31 GMT 2021
5:  */
6: 
7: package org.apache.commons.lang3;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ArrayUtils_1140_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.ArrayUtils"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/evosuite"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayUtils_1140_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.lang3.mutable.MutableInt",
84:       "org.apache.commons.lang3.ArraySorter",
85:       "org.apache.commons.lang3.builder.ToStringStyle",
86:       "org.apache.commons.lang3.ArrayUtils",
87:       "org.apache.commons.lang3.BooleanUtils",
88:       "org.apache.commons.lang3.StringUtils",
89:       "org.apache.commons.lang3.CharUtils",
90:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
91:       "org.apache.commons.lang3.CharSequenceUtils",
92:       "org.apache.commons.lang3.ClassUtils",
93:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
94:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
95:       "org.apache.commons.lang3.builder.ToStringBuilder",
96:       "org.apache.commons.lang3.mutable.Mutable",
97:       "org.apache.commons.lang3.math.NumberUtils",
98:       "org.apache.commons.lang3.builder.Builder",
99:       "org.apache.commons.lang3.builder.HashCodeBuilder",
100:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
101:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
102:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
103:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
104:       "org.apache.commons.lang3.builder.EqualsBuilder"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, ArrayUtils_1140_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayUtils_1140_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.lang3.ArrayUtils",
116:       "org.apache.commons.lang3.CharUtils",
117:       "org.apache.commons.lang3.ClassUtils",
118:       "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
119:       "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
120:       "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
121:       "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
122:       "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
123:       "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
124:       "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
125:       "org.apache.commons.lang3.builder.ToStringStyle",
126:       "org.apache.commons.lang3.ArraySorter",
127:       "org.apache.commons.lang3.math.NumberUtils",
128:       "org.apache.commons.lang3.mutable.MutableInt",
129:       "org.apache.commons.lang3.builder.HashCodeBuilder",
130:       "org.apache.commons.lang3.builder.EqualsBuilder",
131:       "org.apache.commons.lang3.BooleanUtils",
132:       "org.apache.commons.lang3.builder.ToStringBuilder",
133:       "org.apache.commons.lang3.StringUtils",
134:       "org.apache.commons.lang3.CharSequenceUtils"
135:     );
136:   }
137: }

[MASTER] 15:17:31.596 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

Comparator<Character> comparator0 = (Comparator<Character>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Byte, Character>> comparator1 = (Comparator<Map.Entry<Byte, Character>>)Map.Entry.comparingByValue((Comparator<? super Character>) comparator0);
assertNotNull(comparator1);

Float float0 = new Float(29.0F);
assertEquals(29.0F, (float)float0, 0.01F);
assertNotNull(float0);

byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-62);
byteArray0[1] = (byte) (-62);
byteArray0[0] = (byte) (-62);
byteArray0[3] = (byte) (-60);
byteArray0[4] = (byte) (-60);
byteArray0[5] = (byte) (-60);
ArrayUtils.shift(byteArray0, (int) (byte)0);
assertEquals(7, byteArray0.length);
assertArrayEquals(new byte[] {(byte) (-62), (byte) (-62), (byte)0, (byte) (-60), (byte) (-60), (byte) (-60), (byte)0}, byteArray0);

Short[] shortArray0 = new Short[1];
short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short)12);
assertEquals(1, shortArray0.length);
assertEquals(1, shortArray1.length);
assertNotNull(shortArray1);
assertArrayEquals(new short[] {(short)12}, shortArray1);

Short[] shortArray2 = ArrayUtils.toObject(shortArray1);
assertEquals(1, shortArray0.length);
assertEquals(1, shortArray1.length);
assertEquals(1, shortArray2.length);
assertFalse(shortArray2.equals((Object)shortArray0));
assertNotNull(shortArray2);
assertArrayEquals(new short[] {(short)12}, shortArray1);
assertNotSame(shortArray0, shortArray2);
assertNotSame(shortArray2, shortArray0);

short[] shortArray3 = ArrayUtils.removeElements(shortArray1, shortArray1);
assertEquals(1, shortArray0.length);
assertEquals(1, shortArray1.length);
assertEquals(0, shortArray3.length);
assertFalse(shortArray0.equals((Object)shortArray2));
assertFalse(shortArray3.equals((Object)shortArray1));
assertNotNull(shortArray3);
assertArrayEquals(new short[] {(short)12}, shortArray1);
assertArrayEquals(new short[] {}, shortArray3);
assertNotSame(shortArray0, shortArray2);
assertNotSame(shortArray1, shortArray3);
assertNotSame(shortArray3, shortArray1);

boolean boolean0 = ArrayUtils.contains(byteArray0, (byte)24);
assertFalse(boolean0);
assertEquals(7, byteArray0.length);
assertArrayEquals(new byte[] {(byte) (-62), (byte) (-62), (byte)0, (byte) (-60), (byte) (-60), (byte) (-60), (byte)0}, byteArray0);


[MASTER] 15:17:33.956 [logback-2] ERROR JUnitAnalyzer - Issue in scaffolding of the test suite: /usr/local/openjdk-8/jre/lib/amd64/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
Stack trace:
java.lang.ClassLoader$NativeLibrary.load(Native Method)
java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1934)
java.lang.ClassLoader.loadLibrary(ClassLoader.java:1838)
java.lang.Runtime.loadLibrary0(Runtime.java:871)
java.lang.System.loadLibrary(System.java:1124)
sun.font.FontManagerNativeLibrary$1.run(FontManagerNativeLibrary.java:61)
java.security.AccessController.doPrivileged(Native Method)
sun.font.FontManagerNativeLibrary.<clinit>(FontManagerNativeLibrary.java:32)
sun.font.SunFontManager$1.run(SunFontManager.java:346)
java.security.AccessController.doPrivileged(Native Method)
sun.font.SunFontManager.<clinit>(SunFontManager.java:342)
sun.font.FontDesignMetrics.getMetrics(FontDesignMetrics.java:264)
sun.swing.SwingUtilities2.getFontMetrics(SwingUtilities2.java:1125)
javax.swing.JComponent.getFontMetrics(JComponent.java:1626)
org.evosuite.runtime.GuiSupport.initialize(GuiSupport.java:96)
org.apache.commons.lang3.ArrayUtils_1168_tmp__ESTest_scaffolding.initEvoSuiteFramework(ArrayUtils_1168_tmp__ESTest_scaffolding.java:31)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.RunBefores.invokeMethod(RunBefores.java:33)
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
org.junit.runners.ParentRunner.run(ParentRunner.java:413)
org.junit.runners.Suite.runChild(Suite.java:128)
org.junit.runners.Suite.runChild(Suite.java:27)
org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
org.junit.runners.ParentRunner.run(ParentRunner.java:413)
org.junit.runner.JUnitCore.run(JUnitCore.java:137)
org.junit.runner.JUnitCore.run(JUnitCore.java:115)
org.junit.runner.JUnitCore.run(JUnitCore.java:105)
org.junit.runner.JUnitCore.run(JUnitCore.java:94)
org.evosuite.junit.JUnitAnalyzer.runJUnitOnCurrentProcess(JUnitAnalyzer.java:306)
org.evosuite.junit.JUnitAnalyzer.runTests(JUnitAnalyzer.java:276)
org.evosuite.junit.JUnitAnalyzer.handleTestsThatAreUnstable(JUnitAnalyzer.java:178)
org.evosuite.TestSuiteGenerator.compileAndCheckTests(TestSuiteGenerator.java:571)
org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:516)
org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:215)
org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:150)
java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
java.lang.Thread.run(Thread.java:748)

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'ArrayUtils_ESTest' to results/crossover_120/Lang/org_apache_commons_lang3_ArrayUtils/tests/5
* Done!

* Computation finished
