/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 30 15:00:08 GMT 2021
 */

package org.apache.commons.numbers.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.numbers.complex.Complex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Complex_ESTest extends Complex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Complex complex0 = Complex.ofCartesian((-0.9641390290481264), 2126.4420204);
      Complex complex1 = complex0.ONE.divideImaginary(2126.4420204);
      complex1.ONE.acosh();
      Complex.ofPolar((-0.9641390290481264), 0.8685210159976124);
      Complex complex2 = complex0.I.multiplyImaginary(1051.0833124210594);
      Complex complex3 = complex0.subtractImaginary((-0.9641390290481264));
      Complex complex4 = complex3.conj();
      Complex complex5 = complex4.I.exp();
      complex5.I.log();
      complex3.add(complex0);
      Complex.ofCis(1051.0833124210594);
      Complex complex6 = Complex.ofCartesian((-0.9641390290481264), 1.0);
      complex0.I.tanh();
      Complex complex7 = complex4.atan();
      complex2.subtract((-4823.78006975));
      complex0.add(2126.4420204);
      complex7.acos();
      complex7.asin();
      Complex complex8 = Complex.ofCis((-4823.78006975));
      complex6.equals(complex8);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Complex complex0 = Complex.ofPolar(830.717616227, 830.717616227);
      Complex complex1 = complex0.pow(830.717616227);
      Complex complex2 = complex0.pow(complex1);
      Complex complex3 = Complex.ZERO;
      Complex complex4 = Complex.ZERO;
      complex3.real();
      Complex.ofCartesian(1597.39547245988, 1);
      Complex complex5 = Complex.I;
      Complex complex6 = Complex.I;
      complex6.nthRoot(1);
      Complex complex7 = Complex.ofCis((-2122.4113360721));
      complex1.divide(complex7);
      complex7.atanh();
      complex2.pow(complex0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Complex complex0 = Complex.ofPolar((-1.0), (-1.0));
      Complex complex1 = Complex.ofCis((-1.0));
      complex1.isFinite();
      complex0.norm();
      Complex.ofCartesian(Double.NaN, 0.5);
      Complex complex2 = Complex.ofCartesian(Double.NaN, 0.0);
      Complex complex3 = complex2.negate();
      complex0.toString();
      Complex.ofCis(0.0);
      complex3.acosh();
      Complex.ofCartesian(185.5184, (-1.0));
      complex3.tanh();
      complex2.multiplyImaginary(0.9999998891690632);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.log10();
      Complex complex2 = Complex.ofPolar(1.0, 2128);
      complex2.multiplyImaginary(1.0);
      Complex complex3 = complex1.sqrt();
      complex3.subtractFromImaginary(2128);
      Complex complex4 = complex1.negate();
      complex2.asinh();
      complex4.sqrt();
      complex1.atanh();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.log10();
      Complex complex2 = Complex.ofPolar(1.0, 2128);
      Complex complex3 = complex2.multiplyImaginary(1.0);
      Complex complex4 = complex1.sqrt();
      complex4.subtractFromImaginary(2316.6656);
      complex1.negate();
      Complex complex5 = Complex.I;
      Complex complex6 = complex4.log10();
      Complex complex7 = complex6.sqrt();
      complex4.cosh();
      Complex.ofCartesian(2316.6656, 700.0);
      complex7.subtractFromImaginary(2128);
      complex1.cosh();
      Complex complex8 = complex3.negate();
      Complex complex9 = Complex.ONE;
      Complex complex10 = Complex.I;
      complex10.proj();
      complex8.imag();
      complex2.atanh();
      complex1.multiplyImaginary(2615.447129792983);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.ZERO.log();
      complex1.ONE.toString();
      Complex complex2 = complex0.ONE.divide(complex1);
      Complex complex3 = complex2.I.pow(complex1);
      Complex complex4 = complex1.subtractFromImaginary(615.2427475);
      complex0.sin();
      Complex.ofCartesian(1.0, 1.0);
      Complex complex5 = complex4.tanh();
      Complex complex6 = Complex.ofPolar(1.0, 3937.722450383144);
      complex5.pow(complex6);
      complex1.add(1.0);
      complex3.pow(615.2427475);
      Complex complex7 = complex4.pow(complex3);
      complex7.sinh();
      complex4.real();
      Complex complex8 = Complex.ofCartesian((-1.0), 1597.39547245988);
      Complex.ofPolar(0.0, 830.717616227);
      Complex complex9 = complex4.subtract(complex0);
      complex4.hashCode();
      complex7.real();
      complex9.acos();
      Complex complex10 = Complex.ofPolar(Double.POSITIVE_INFINITY, (-0.8750447860151234));
      complex10.addImaginary((-1.0));
      complex8.subtract(935.6191563749);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Complex complex0 = Complex.ofPolar(1441.810185235, 1441.810185235);
      Complex complex1 = complex0.sinh();
      complex0.exp();
      complex0.add((-312.4353197723));
      Complex complex2 = Complex.ONE;
      Complex complex3 = Complex.ONE;
      complex3.pow((-926.194530214));
      Complex complex4 = Complex.I;
      Complex complex5 = Complex.I;
      complex5.pow(complex1);
      complex5.tanh();
      Complex complex6 = Complex.I;
      // Undeclared exception!
      try { 
        Complex.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      complex0.subtractImaginary((-1857.6313023824166));
      Complex complex1 = complex0.subtractFromImaginary(533.494778);
      Complex complex2 = Complex.ZERO;
      Complex complex3 = complex2.pow(complex0);
      Complex complex4 = Complex.ONE;
      Complex complex5 = Complex.ONE;
      Complex complex6 = complex3.subtract(complex5);
      complex6.hashCode();
      Complex complex7 = Complex.I;
      complex7.toString();
      Complex complex8 = complex1.multiplyImaginary((-2488.0236));
      Complex complex9 = complex8.sin();
      Complex complex10 = complex6.acosh();
      complex8.cos();
      Complex.ofPolar((-789.08), (-312.4353197723));
      complex8.exp();
      complex2.add(0.2397127693021015);
      Complex complex11 = Complex.ONE;
      complex2.pow(1474.204503);
      complex9.pow(complex4);
      complex10.tanh();
      Complex complex12 = Complex.I;
      Complex.parse("(0.0,1.0)");
      complex2.cosh();
      complex4.log10();
      complex11.conj();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Complex complex0 = Complex.ofCartesian((-3031.6), (-1208.61181));
      Complex complex1 = complex0.sinh();
      Complex complex2 = complex0.pow(complex1);
      Complex complex3 = complex2.log();
      Complex complex4 = complex2.proj();
      complex4.ZERO.multiply((-1208.61181));
      Complex complex5 = complex2.asinh();
      complex0.imag();
      complex5.cosh();
      Complex complex6 = Complex.ofCis(1577.7807771824);
      complex6.cos();
      Complex complex7 = complex6.log10();
      complex7.ONE.cos();
      complex3.conj();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Complex complex0 = Complex.ofCartesian((-3031.6), (-1208.61181));
      complex0.nthRoot(2128);
      Complex complex1 = complex0.multiplyImaginary((-321.507979));
      Complex complex2 = complex0.sin();
      complex1.acosh();
      Complex complex3 = complex0.cos();
      complex2.subtractFromImaginary((-321.507979));
      Complex complex4 = complex0.exp();
      complex4.ZERO.multiply(complex3);
      complex3.proj();
      complex0.asinh();
      complex0.imag();
      Complex.ofCartesian((-3031.6), (-1208.61181));
      complex3.sqrt();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.log10();
      Complex complex2 = Complex.ofPolar(1.0, 2128);
      Complex complex3 = complex1.sqrt();
      Complex complex4 = complex3.subtractFromImaginary(2316.6656);
      complex1.negate();
      Complex complex5 = complex2.asinh();
      complex1.sqrt();
      Complex complex6 = complex3.cosh();
      Complex complex7 = complex6.add((double) 2128);
      Complex complex8 = complex4.subtractFromImaginary(2128);
      complex2.cosh();
      complex4.negate();
      Complex complex9 = Complex.ONE;
      complex7.proj();
      complex5.imag();
      complex8.atanh();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.ZERO.log();
      complex1.ONE.toString();
      Complex complex2 = complex0.ONE.divide(complex1);
      Complex complex3 = complex2.I.pow(complex1);
      Complex complex4 = complex1.subtractFromImaginary(615.2427475);
      complex0.sin();
      complex2.toString();
      Complex complex5 = Complex.ofPolar(1289.5494516917079, 217.05472777498085);
      complex5.multiplyImaginary(217.05472777498085);
      complex2.sin();
      Complex complex6 = complex4.acosh();
      complex1.cos();
      Complex complex7 = Complex.ofPolar((-594.5510231), 1474.204503);
      Complex complex8 = complex7.exp();
      Complex complex9 = complex6.add((-312.4353197723));
      Complex complex10 = Complex.ONE;
      Complex complex11 = complex1.pow((-1.0));
      Complex complex12 = Complex.I;
      complex3.pow(complex12);
      complex9.tanh();
      Complex complex13 = Complex.I;
      Complex.parse("(-0.0,-0.0)");
      complex8.cosh();
      complex4.log10();
      complex11.conj();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = (-1.0);
      Complex complex0 = Complex.ofPolar((-1.0), (-1034.98));
      Complex complex1 = complex0.atan();
      Complex complex2 = Complex.ZERO;
      Complex complex3 = complex2.multiplyImaginary((-1.0));
      Complex complex4 = complex3.sqrt();
      Complex complex5 = complex2.cosh();
      double double1 = 823.02061188;
      Complex complex6 = complex3.add(823.02061188);
      double double2 = (-1127.289060872);
      complex6.subtractFromImaginary((-1034.98));
      complex4.cosh();
      complex1.exp();
      complex5.norm();
      // Undeclared exception!
      try { 
        Complex.parse("org.apache.commons.numbers.complex.Complex");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected start delimiter '(' for input \"org.apache.commons.numbers.complex.Complex\"
         //
         verifyException("org.apache.commons.numbers.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.ZERO.log();
      complex1.ONE.toString();
      Complex complex2 = complex0.ONE.divide(complex1);
      Complex complex3 = complex2.I.pow(complex1);
      Complex complex4 = complex1.subtractFromImaginary(615.2427475);
      complex0.sin();
      Complex.ofCartesian(1.0, 1.0);
      complex4.tanh();
      Complex complex5 = complex1.add(1.0);
      double double0 = 830.717616227;
      Complex complex6 = complex3.pow(615.2427475);
      Complex complex7 = complex4.pow(complex3);
      complex7.sinh();
      complex4.real();
      complex5.add(1.0);
      complex5.subtractFromImaginary(5.9666725849601654E-154);
      complex7.cosh();
      complex6.negate();
      Complex complex8 = Complex.ONE;
      complex8.proj();
      // Undeclared exception!
      try { 
        Complex.parse("E");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Input too short, expected format '(x,y)' for input \"E\"
         //
         verifyException("org.apache.commons.numbers.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Complex complex0 = Complex.I;
      // Undeclared exception!
      try { 
        complex0.ONE.divide((Complex) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Complex complex0 = Complex.ofPolar(1441.810185235, 1441.810185235);
      Complex complex1 = complex0.sinh();
      Complex complex2 = complex1.sinh();
      complex0.pow(complex2);
      complex0.hashCode();
      complex2.toString();
      Complex complex3 = complex2.multiplyImaginary(1474.204503);
      Complex complex4 = complex2.sin();
      Complex complex5 = Complex.ofCis(1474.204503);
      complex5.acosh();
      Complex complex6 = Complex.I;
      Complex complex7 = complex6.cos();
      Complex.ofPolar(1441.810185235, (-0.40728656976312944));
      complex4.exp();
      complex7.add(4085.5546178);
      Complex complex8 = Complex.ONE;
      complex7.pow(0.7698788412710604);
      complex8.pow(complex2);
      complex3.tanh();
      Complex complex9 = Complex.I;
      // Undeclared exception!
      try { 
        Complex.parse("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Input too short, expected format '(x,y)' for input \"\"
         //
         verifyException("org.apache.commons.numbers.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.sin();
      Complex complex2 = complex1.log10();
      complex1.multiplyImaginary(0.5);
      Complex complex3 = complex2.subtractFromImaginary(2124.0);
      Complex complex4 = Complex.ofCis(2124.0);
      complex3.cosh();
      Complex complex5 = complex4.exp();
      complex5.hashCode();
      Complex complex6 = complex3.subtract(2124.0);
      Complex complex7 = complex2.cosh();
      complex3.exp();
      complex6.sinh();
      complex4.subtract(0.5);
      Complex complex8 = Complex.ONE;
      Complex complex9 = Complex.ZERO;
      complex9.divide((-1068.4797786529718));
      Complex complex10 = Complex.I;
      Complex complex11 = complex5.subtract(904.70438869);
      Complex.ofCartesian((-1068.4797786529718), 0.5);
      Complex complex12 = Complex.I;
      complex12.subtract(complex6);
      complex9.hashCode();
      complex11.real();
      complex7.acos();
      Complex complex13 = Complex.ofCartesian(0.5, 2124.0);
      complex13.addImaginary(904.70438869);
      complex2.subtract((-4372.500757629924));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Complex complex0 = Complex.ofPolar((-1.0), (-1.0));
      Complex complex1 = Complex.ofCis((-1.0));
      complex1.isFinite();
      Complex complex2 = Complex.ofCis((-1.0));
      complex2.norm();
      complex1.divide(complex0);
      Complex complex3 = complex1.atanh();
      complex3.log();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.ZERO.log();
      complex1.ONE.toString();
      Complex complex2 = complex1.ONE.log();
      Complex complex3 = complex2.ONE.divide(complex1);
      Complex complex4 = complex3.I.pow(complex1);
      Complex complex5 = complex1.subtractFromImaginary(615.2427475);
      complex0.sin();
      Complex.ofCartesian(1.0, 1.0);
      Complex complex6 = Complex.ofCis(0.0);
      Complex complex7 = complex4.exp();
      complex6.hashCode();
      Complex complex8 = complex4.subtract(139.536953);
      Complex complex9 = complex3.cosh();
      complex9.exp();
      Complex complex10 = complex6.sinh();
      Complex complex11 = complex10.subtract((-74.6226172));
      Complex complex12 = Complex.ONE;
      complex2.divide(1857.6313023824166);
      Complex complex13 = Complex.I;
      Complex complex14 = Complex.ZERO;
      complex14.subtract(2797.6883179901924);
      complex7.norm();
      Complex.ofCartesian(0.0, 615.2427475);
      complex6.subtract(complex14);
      complex11.hashCode();
      complex5.real();
      complex8.acos();
      complex8.addImaginary(0.0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.ONE.exp();
      Complex complex2 = complex1.I.add(2276.19818969);
      Complex complex3 = complex2.pow(830.717616227);
      complex3.ONE.pow(complex1);
      Complex complex4 = complex3.sinh();
      complex3.real();
      Complex.ofCartesian(Double.POSITIVE_INFINITY, 215.25905055718);
      complex0.nthRoot(1);
      Complex complex5 = complex1.pow(2276.19818969);
      Complex complex6 = complex5.divide(complex4);
      complex6.atanh();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Complex complex0 = Complex.I;
      complex0.sqrt();
      Complex complex1 = Complex.I;
      Complex complex2 = Complex.ZERO;
      complex2.equals(complex1);
      Complex.ofPolar(1663.1232429031522, 1663.1232429031522);
      Complex complex3 = complex2.exp();
      complex3.add(388578.340428632);
      Complex complex4 = Complex.ONE;
      Complex complex5 = Complex.ZERO;
      complex5.pow((-2307.2126162));
      Complex complex6 = complex2.pow(complex4);
      complex6.tanh();
      Complex complex7 = Complex.I;
      // Undeclared exception!
      try { 
        Complex.parse("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Input too short, expected format '(x,y)' for input \"\"
         //
         verifyException("org.apache.commons.numbers.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Complex complex0 = Complex.ofPolar(309.17826, 309.17826);
      Complex complex1 = complex0.ONE.multiplyImaginary(309.17826);
      Complex complex2 = Complex.ONE;
      Complex complex3 = complex1.I.subtract(complex2);
      complex3.ONE.hashCode();
      complex2.toString();
      Complex complex4 = complex3.multiplyImaginary(1474.204503);
      complex2.sin();
      complex4.acosh();
      Complex complex5 = complex0.cos();
      Complex.ofPolar((-312.4353197723), (-312.4353197723));
      complex5.exp();
      complex3.add(388578.340428632);
      Complex complex6 = Complex.ONE;
      Complex complex7 = complex5.pow((-4067.0));
      complex7.pow(complex6);
      complex0.tanh();
      Complex complex8 = Complex.I;
      // Undeclared exception!
      try { 
        Complex.parse("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Input too short, expected format '(x,y)' for input \"\"
         //
         verifyException("org.apache.commons.numbers.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Complex complex0 = Complex.ofCartesian((-3031.6), (-1208.61181));
      complex0.nthRoot(2128);
      Complex complex1 = complex0.multiplyImaginary((-321.507979));
      complex0.sin();
      Complex complex2 = complex1.acosh();
      Complex complex3 = complex0.cos();
      Complex complex4 = complex1.exp();
      Complex complex5 = complex2.add((-1208.61181));
      Complex complex6 = complex0.tanh();
      complex3.toString();
      complex4.real();
      Complex.ofCartesian((-1488.12103), -0.0);
      complex3.nthRoot(2128);
      Complex complex7 = complex5.atanh();
      complex3.equals("' for input \"");
      complex6.getImaginary();
      Complex complex8 = Complex.ofPolar(215.25905055718, 1692.6665416);
      Complex complex9 = Complex.ofPolar((-1208.61181), 0.7853981633974483);
      Complex.parse("(-Infinity,-Infinity)");
      complex9.ZERO.toString();
      complex9.isNaN();
      complex8.arg();
      Complex complex10 = complex1.atanh();
      complex7.divide(366.61842107133);
      complex7.addImaginary(215.25905055718);
      complex10.cos();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Complex complex0 = Complex.ofPolar(1441.810185235, 1441.810185235);
      Complex complex1 = complex0.sinh();
      Complex complex2 = complex1.sinh();
      complex1.nthRoot(2128);
      Complex complex3 = complex1.exp();
      Complex complex4 = complex2.add(1253.733);
      Complex complex5 = Complex.ONE;
      Complex complex6 = complex3.pow((double) 2128);
      complex6.pow(complex2);
      Complex complex7 = complex6.tanh();
      Complex complex8 = Complex.I;
      complex0.multiplyImaginary(1.0);
      complex5.sin();
      complex7.pow(complex2);
      Complex complex9 = complex4.exp();
      complex9.atanh();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Complex complex0 = Complex.ofPolar(1441.810185235, 1441.810185235);
      Complex complex1 = complex0.sinh();
      Complex complex2 = complex1.sinh();
      complex1.nthRoot(2128);
      Complex complex3 = complex1.exp();
      Complex complex4 = complex2.add(1253.733);
      Complex complex5 = Complex.ONE;
      Complex complex6 = complex3.pow((double) 2128);
      complex6.pow(complex2);
      Complex complex7 = complex6.tanh();
      complex0.multiplyImaginary(1.0);
      complex5.sin();
      complex7.pow(complex2);
      Complex complex8 = complex4.exp();
      complex8.atanh();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = 1441.810185235;
      Complex complex0 = Complex.ofPolar(1441.810185235, 1441.810185235);
      Complex complex1 = complex0.sinh();
      Complex complex2 = complex1.sinh();
      complex1.nthRoot(2128);
      Complex complex3 = complex0.multiplyImaginary(1441.810185235);
      complex2.sin();
      complex3.acosh();
      complex3.cos();
      complex1.exp();
      complex3.add(1441.810185235);
      Complex complex4 = Complex.I;
      complex2.asinh();
      // Undeclared exception!
      try { 
        Complex.parse("zl.9 94su|AC1G6|Ta");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected start delimiter '(' for input \"zl.9 94su|AC1G6|Ta\"
         //
         verifyException("org.apache.commons.numbers.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      complex0.nthRoot(2128);
      Complex complex1 = complex0.sinh();
      Complex complex2 = complex0.sinh();
      Complex complex3 = complex1.pow(complex2);
      complex1.ONE.conj();
      Complex complex4 = Complex.ONE;
      complex4.log();
      complex3.I.add(4677.954734793444);
      complex1.proj();
      Complex complex5 = complex0.asinh();
      complex0.imag();
      complex5.cosh();
      complex2.conj();
      complex3.acos();
  }
}
